{
 "Description": "RES_2024.12",
 "Metadata": {
  "AWS::CloudFormation::Interface": {
   "ParameterGroups": [
    {
     "Label": {
      "default": "Environment and installer details"
     },
     "Parameters": [
      "EnvironmentName",
      "AdministratorEmail",
      "SSHKeyPair",
      "ClientIp",
      "ClientPrefixList",
      "InfrastructureHostAMI",
      "IAMPermissionBoundary"
     ]
    },
    {
     "Label": {
      "default": "Network configuration for the RES environment"
     },
     "Parameters": [
      "VpcId",
      "IsLoadBalancerInternetFacing",
      "LoadBalancerSubnets",
      "InfrastructureHostSubnets",
      "VdiSubnets"
     ]
    },
    {
     "Label": {
      "default": "Shared Storage details"
     },
     "Parameters": [
      "SharedHomeFileSystemId"
     ]
    },
    {
     "Label": {
      "default": "Active Directory details - Optional"
     },
     "Parameters": [
      "ActiveDirectoryName",
      "ADShortName",
      "LDAPBase",
      "LDAPConnectionURI",
      "ServiceAccountCredentialsSecretArn",
      "UsersOU",
      "GroupsOU",
      "SudoersGroupName",
      "ComputersOU",
      "DomainTLSCertificateSecretArn",
      "EnableLdapIDMapping",
      "DisableADJoin",
      "ServiceAccountUserDN"
     ]
    },
    {
     "Label": {
      "default": "Custom domain details, only needed if you would like to use a custom domain - Optional"
     },
     "Parameters": [
      "CustomDomainNameforWebApp",
      "CustomDomainNameforVDI",
      "ACMCertificateARNforWebApp",
      "CertificateSecretARNforVDI",
      "PrivateKeySecretARNforVDI"
     ]
    },
    {
     "Label": {
      "default": "Internet proxy configuration for RES deployed in isolated environment."
     },
     "Parameters": [
      "HttpsProxy",
      "HttpProxy",
      "NoProxy"
     ]
    }
   ],
   "ParameterLabels": {
    "ClientPrefixList": {
     "default": "ClientPrefixList - Optional"
    },
    "InfrastructureHostAMI": {
     "default": "InfrastructureHostAMI - Optional"
    },
    "IAMPermissionBoundary": {
     "default": "IAMPermissionBoundary - Optional"
    },
    "CustomDomainNameforWebApp": {
     "default": "CustomDomainNameforWebApp - Optional"
    },
    "CustomDomainNameforVDI": {
     "default": "CustomDomainNameforVDI - Optional"
    },
    "ACMCertificateARNforWebApp": {
     "default": "ACMCertificateARNforWebApp - Optional"
    },
    "CertificateSecretARNforVDI": {
     "default": "CertificateSecretARNforVDI - Optional"
    },
    "PrivateKeySecretARNforVDI": {
     "default": "PrivateKeySecretARNforVDI - Optional"
    },
    "ActiveDirectoryName": {
     "default": "ActiveDirectoryName - Optional"
    },
    "ADShortName": {
     "default": "ADShortName - Optional"
    },
    "LDAPBase": {
     "default": "LDAPBase - Optional"
    },
    "LDAPConnectionURI": {
     "default": "LDAPConnectionURI - Optional"
    },
    "ServiceAccountCredentialsSecretArn": {
     "default": "ServiceAccountCredentialsSecretArn - Optional"
    },
    "UsersOU": {
     "default": "UsersOU - Optional"
    },
    "GroupsOU": {
     "default": "GroupsOU - Optional"
    },
    "SudoersGroupName": {
     "default": "SudoersGroupName - Optional"
    },
    "ComputersOU": {
     "default": "ComputersOU - Optional"
    },
    "DomainTLSCertificateSecretArn": {
     "default": "DomainTLSCertificateSecretArn - Optional"
    },
    "EnableLdapIDMapping": {
     "default": "EnableLdapIDMapping - Optional"
    },
    "DisableADJoin": {
     "default": "DisableADJoin - Optional"
    },
    "ServiceAccountUserDN": {
     "default": "ServiceAccountUserDN - Optional"
    },
    "HttpsProxy": {
     "default": "HttpsProxy - Optional"
    },
    "HttpProxy": {
     "default": "HttpProxy - Optional"
    },
    "NoProxy": {
     "default": "NoProxy - Optional"
    }
   }
  }
 },
 "Parameters": {
  "HttpProxy": {
   "Type": "String",
   "AllowedPattern": "^((https|http):\\/\\/(?:(?:\\d{1,3}\\.){3}\\d{1,3}|\\[(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}\\]):(\\d+))?$",
   "ConstraintDescription": "The http proxy must be a valid url with IP address and port number. example: http://169.254.169.254:8080",
   "Description": "For deployment in isolated environment, please configure a HTTP proxy to connect to AWS services without VPC endpoints."
  },
  "HttpsProxy": {
   "Type": "String",
   "AllowedPattern": "^((https|http):\\/\\/(?:(?:\\d{1,3}\\.){3}\\d{1,3}|\\[(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}\\]):(\\d+))?$",
   "ConstraintDescription": "The https proxy must be a valid url with IP address and port number. example: http://169.254.169.254:8080",
   "Description": "For deployment in isolated environment, please configure a HTTPS proxy to connect to AWS services without VPC endpoints."
  },
  "NoProxy": {
   "Type": "String",
   "Description": "For deployment in isolated environment, if you are setting up HTTP_PROXY and HTTPS_PROXY, the NO_PROXY parameters are required to prevent the instance from using proxy to query localhost, instance metadata IP addresses, and the services that support VPC endpoints. example: 169.254.170.2,localhost"
  },
  "SharedHomeFileSystemId": {
   "Type": "String",
   "AllowedPattern": "fs-[0-9a-f]{17}",
   "ConstraintDescription": "SharedHomeFileSystemId must begin with 'fs-', only contain letters (a-f) or numbers(0-9) and must be 20 characters in length",
   "Description": "Please provide id of a home file system to be mounted on all VDI instances."
  },
  "ActiveDirectoryName": {
   "Type": "String",
   "AllowedPattern": "^$|(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{1,63}(?<!-)\\.)+[a-zA-Z]{2,63}$)",
   "Description": "Please provide the Fully Qualified Domain Name (FQDN) for your Active Directory. For example, developer.res.hpc.aws.dev"
  },
  "LDAPBase": {
   "Type": "String",
   "Description": "Please provide the Active Directory base string Distinguished Name (DN) For example, dc=developer,dc=res,dc=hpc,dc=aws,dc=dev"
  },
  "ADShortName": {
   "Type": "String",
   "Description": "Please provide the short name in Active directory"
  },
  "LDAPConnectionURI": {
   "Type": "String",
   "Description": "Please provide the active directory connection URI (e.g. ldap://www.example.com)"
  },
  "UsersOU": {
   "Type": "String",
   "Description": "Please provide Users Organization Unit in your active directory for example, OU=Users,DC=RES,DC=example,DC=internal"
  },
  "GroupsOU": {
   "Type": "String",
   "Description": "Please provide user groups Oganization Unit in your active directory"
  },
  "ComputersOU": {
   "Type": "String",
   "Description": "Please provide Organization Unit for compute and storage servers in your active directory"
  },
  "SudoersGroupName": {
   "Type": "String",
   "Description": "Please provide group name of users who will be able to sudo in your active directory"
  },
  "ServiceAccountCredentialsSecretArn": {
   "Type": "String",
   "AllowedPattern": "^$|^(?:arn:(?:aws|aws-us-gov|aws-cn):secretsmanager:[a-z0-9-]+:[0-9]{12}:secret:[A-Za-z0-9\\-\\_\\+\\=\\/\\.\\@]{1,519})?$",
   "Description": "Directory Service Root (Service Account) Credentials Secret ARN. The username and password for the Active Directory ServiceAccount user formatted as a username:password key/value pair."
  },
  "DomainTLSCertificateSecretArn": {
   "Type": "String",
   "Description": "AD Domain TLS Certificate Secret ARN"
  },
  "EnableLdapIDMapping": {
   "Type": "String",
   "AllowedValues": [
    "True",
    "False",
    ""
   ],
   "Description": "Set to False to use the uidNumbers and gidNumbers for users and group from the provided AD. Otherwise set to True."
  },
  "DisableADJoin": {
   "Type": "String",
   "AllowedValues": [
    "True",
    "False",
    ""
   ],
   "Description": "Set to True to prevent linux hosts from joining the Directory Domain. Otherwise set to False"
  },
  "ServiceAccountUserDN": {
   "Type": "String",
   "Description": "Provide the Distinguished name (DN) of the service account user in the Active Directory",
   "NoEcho": true
  },
  "CustomDomainNameforWebApp": {
   "Type": "String",
   "Description": "You may provide a custom domain name for web user interface, instead of default under amazonaws.com."
  },
  "CustomDomainNameforVDI": {
   "Type": "String",
   "Description": "You may provide a custom domain name for VDI, instead of default under amazonaws.com."
  },
  "ACMCertificateARNforWebApp": {
   "Type": "String",
   "Description": "If you have provided a custom domain name for Web UI above then please provide the Amazon Resource Name (ARN) for the corresponding certificate stored in Amazon Certificate Manager (ACM)."
  },
  "CertificateSecretARNforVDI": {
   "Type": "String",
   "Description": "If you have provided a custom domain name for VDI above then please provide the Amazon Resource Name (ARN) for the certificate secret stored in AWS Secret Manager (ASM)."
  },
  "PrivateKeySecretARNforVDI": {
   "Type": "String",
   "Description": "If you have provided custom domain name for VDI above then please provide Amazon Resource Name (ARN) for the private key of the certificate stored in AWS Secret Manager (ASM)."
  },
  "SSHKeyPair": {
   "Type": "AWS::EC2::KeyPair::KeyName",
   "AllowedPattern": ".+",
   "Description": "Default SSH keys, registered in EC2 that can be used to SSH into environment instances."
  },
  "ClientIp": {
   "Type": "String",
   "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
   "ConstraintDescription": "ClientIP must be a valid IP or network range of the form x.x.x.x/x. specify your IP/NETMASK (e.g x.x.x/32 or x.x.x.x/24 for subnet range)",
   "Description": "Default IP(s) allowed to directly access the Web UI and SSH into the bastion host. We recommend that you restrict it with your own IP/subnet (x.x.x.x/32 for your own ip or x.x.x.x/24 for range. Replace x.x.x.x with your own PUBLIC IP. You can get your public IP using tools such as https://ifconfig.co/)."
  },
  "ClientPrefixList": {
   "Type": "String",
   "AllowedPattern": "^(pl-[a-z0-9]{8,20})?$",
   "ConstraintDescription": "Must be a valid prefix list ID, which starts with 'pl-'.  These can be found either by navigating to the VPC console, or by calling ec2:DescribePrefixLists",
   "Description": "A prefix list that covers IPs allowed to directly access the Web UI and SSH into the bastion host."
  },
  "EnvironmentName": {
   "Type": "String",
   "AllowedPattern": "res-[A-Za-z\\-\\_0-9]{0,7}",
   "ConstraintDescription": "The name of the environment must start with \"res-\" and should be less than or equal to 11 characters.",
   "Description": "Provide name of the Environment, the name of the environment must start with \"res-\" and should be less than or equal to 11 characters."
  },
  "AdministratorEmail": {
   "Type": "String",
   "AllowedPattern": "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$|^$)",
   "ConstraintDescription": "AdministratorEmail must be a valid email id"
  },
  "IAMPermissionBoundary": {
   "Type": "String",
   "AllowedPattern": "^(?:arn:(?:aws|aws-us-gov|aws-cn):iam::[0-9]{12}:policy/[A-Za-z0-9\\-\\_\\+\\=\\,\\.\\@]{1,128})?$",
   "ConstraintDescription": "The IAM permission boundary must be a valid ARN.",
   "Description": "You may provide an IAM permission boundary ARN that will be attached to all roles created in RES."
  },
  "InfrastructureHostAMI": {
   "Type": "String",
   "AllowedPattern": "^(ami-[0-9a-f]{8,17})?$",
   "ConstraintDescription": "The AMI id must begin with 'ami-' followed by only letters (a-f) or numbers(0-9).",
   "Description": "You may provide a custom AMI id to use for all the infrastructure hosts. The current supported base operating systems are Amazon Linux 2, RHEL8 and RHEL9."
  },
  "VpcId": {
   "Type": "AWS::EC2::VPC::Id",
   "AllowedPattern": "vpc-[0-9a-f]{17}",
   "ConstraintDescription": "VpcId must begin with 'vpc-', only contain letters (a-f) or numbers(0-9) and must be 21 characters in length"
  },
  "LoadBalancerSubnets": {
   "Type": "List<AWS::EC2::Subnet::Id>",
   "AllowedPattern": ".+",
   "Description": "Select at least 2 subnets from different Availability Zones. For deployments that need restricted internet access, select private subnets. For deployments that need internet access, select public subnets."
  },
  "InfrastructureHostSubnets": {
   "Type": "List<AWS::EC2::Subnet::Id>",
   "AllowedPattern": ".+",
   "Description": "Select at least 2 private subnets from different Availability Zones."
  },
  "VdiSubnets": {
   "Type": "List<AWS::EC2::Subnet::Id>",
   "AllowedPattern": ".+",
   "Description": "Select at least 2 private subnets from different Availability Zones."
  },
  "IsLoadBalancerInternetFacing": {
   "Type": "String",
   "AllowedValues": [
    "true",
    "false"
   ],
   "Description": "Select true to deploy internet facing load balancer (Requires public subnets for load balancer). For deployments that need restricted internet access, select false."
  }
 },
 "Resources": {
  "ApiProxyDepsLayerDC43D796": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.11"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/7174f1ee1770b4557ddc5c4daefb08cc1dd04b1ad23758d955eb489a535ab0ce.zip"
    },
    "Description": "Lambda layer with Python dependencies"
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ApiProxyDepsLayer/Resource",
    "aws:asset:path": "asset.7174f1ee1770b4557ddc5c4daefb08cc1dd04b1ad23758d955eb489a535ab0ce",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Content"
   }
  },
  "ParameterListToStringTransformLambdaRole372B45AA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    },
    "RoleName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-ParameterListToStringTransformLambdaRole"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ParameterListToStringTransformLambdaRole/Resource"
   }
  },
  "ParameterListToStringTransformLambdaRolePolicy65D1FC37": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "logs:CreateLogGroup",
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "CloudWatchLogsPermissions"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DeleteLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "CloudWatchLogStreamPermissions"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-ParameterListToStringTransformLambdaRolePolicy"
      ]
     ]
    },
    "Roles": [
     {
      "Ref": "ParameterListToStringTransformLambdaRole372B45AA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ParameterListToStringTransformLambdaRolePolicy/Resource"
   }
  },
  "ParameterListToStringTransformLambdaDBE470E7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/8ce7ca9e16b5f85f8341dea80db049a6aa8ddc26ae7b2ad6b997869ba7485f56.zip"
    },
    "Description": "Lambda to transform the parameters from list to string for nested stack",
    "Environment": {
     "Variables": {
      "LOAD_BALANCER_SUBNETS": {
       "Fn::Join": [
        ",",
        {
         "Ref": "LoadBalancerSubnets"
        }
       ]
      },
      "INFRA_SUBNETS": {
       "Fn::Join": [
        ",",
        {
         "Ref": "InfrastructureHostSubnets"
        }
       ]
      },
      "VDI_SUBNETS": {
       "Fn::Join": [
        ",",
        {
         "Ref": "VdiSubnets"
        }
       ]
      }
     }
    },
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-ParameterListToStringTransformLambda"
      ]
     ]
    },
    "Handler": "lambda_functions.custom_resource.parameter_list_to_string_transform_lambda.handler.handler",
    "Role": {
     "Fn::GetAtt": [
      "ParameterListToStringTransformLambdaRole372B45AA",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "ParameterListToStringTransformLambdaRole372B45AA"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ParameterListToStringTransformLambda/Resource",
    "aws:asset:path": "asset.8ce7ca9e16b5f85f8341dea80db049a6aa8ddc26ae7b2ad6b997869ba7485f56",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CustomResourceParamsListToStringTransformer": {
   "Type": "Custom::ParamsListToStringTransformer",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "ParameterListToStringTransformLambdaDBE470E7",
      "Arn"
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/CustomResourceParamsListToStringTransformer/Default"
   }
  },
  "RESlibrary22ADD963": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.9",
     "python3.11",
     "python3.12"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/06e9d638d88da1fe17ae0d33eb01d2d3427e5767090297d67cecfc4bd888e49f.zip"
    },
    "Description": "Shared RES library for Lambda functions"
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/RES-library/Resource",
    "aws:asset:path": "asset.06e9d638d88da1fe17ae0d33eb01d2d3427e5767090297d67cecfc4bd888e49f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "resbaseconstructDcvBrokerTableDeltionRoleB800C25D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "dynamodb:DeleteTable",
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":dynamodb:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":table/",
            {
             "Ref": "EnvironmentName"
            },
            ".vdc.dcv-broker*"
           ]
          ]
         }
        },
        {
         "Action": "dynamodb:ListTables",
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":dynamodb:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":table/*"
           ]
          ]
         }
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "DDBPolicy"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "EnvironmentName"
         },
         "-res-base"
        ]
       ]
      }
     },
     {
      "Key": "res:EnvironmentName",
      "Value": {
       "Ref": "EnvironmentName"
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/res-base-construct/DcvBrokerTableDeltionRole/Resource"
   }
  },
  "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "EnvironmentName"
         },
         "-res-base"
        ]
       ]
      }
     },
     {
      "Key": "res:EnvironmentName",
      "Value": {
       "Ref": "EnvironmentName"
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/res-base-construct/dcvBrokerTableDeletionProvider/framework-onEvent/ServiceRole/Resource"
   }
  },
  "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleDefaultPolicy3C35CC84": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "resbaseNestedStackresbaseNestedStackResource2414FD16",
          "Outputs.ResearchAndEngineeringStudioresbasedcvBrokerTableDeletionLambda8BB4011FArn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "resbaseNestedStackresbaseNestedStackResource2414FD16",
             "Outputs.ResearchAndEngineeringStudioresbasedcvBrokerTableDeletionLambda8BB4011FArn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleDefaultPolicy3C35CC84",
    "Roles": [
     {
      "Ref": "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/res-base-construct/dcvBrokerTableDeletionProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEvent4B420C74": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/8ba5ee0003de28bf8e4a4fc7e1821c881abd3a80657825533ed1c301bec7e74a.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (ResearchAndEngineeringStudio/res-base-construct/dcvBrokerTableDeletionProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "resbaseNestedStackresbaseNestedStackResource2414FD16",
        "Outputs.ResearchAndEngineeringStudioresbasedcvBrokerTableDeletionLambda8BB4011FArn"
       ]
      }
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "EnvironmentName"
         },
         "-res-base"
        ]
       ]
      }
     },
     {
      "Key": "res:EnvironmentName",
      "Value": {
       "Ref": "EnvironmentName"
      }
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleDefaultPolicy3C35CC84",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/res-base-construct/dcvBrokerTableDeletionProvider/framework-onEvent/Resource",
    "aws:asset:path": "asset.8ba5ee0003de28bf8e4a4fc7e1821c881abd3a80657825533ed1c301bec7e74a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "resbaseconstructdcvBrokerTableDeletionCustomResource4F27006C": {
   "Type": "AWS::CloudFormation::CustomResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEvent4B420C74",
      "Arn"
     ]
    },
    "environment_name": {
     "Ref": "EnvironmentName"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/res-base-construct/dcvBrokerTableDeletionCustomResource/Default"
   }
  },
  "resbaseNestedStackresbaseNestedStackResource2414FD16": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "Parameters": {
     "referencetoResearchAndEngineeringStudioEnvironmentName73279C6BRef": {
      "Ref": "EnvironmentName"
     },
     "referencetoResearchAndEngineeringStudioresbaseconstructDcvBrokerTableDeltionRoleE82211ABArn": {
      "Fn::GetAtt": [
       "resbaseconstructDcvBrokerTableDeltionRoleB800C25D",
       "Arn"
      ]
     },
     "referencetoResearchAndEngineeringStudioServiceAccountUserDN95B9F5ECRef": {
      "Ref": "ServiceAccountUserDN"
     },
     "referencetoResearchAndEngineeringStudioIAMPermissionBoundaryAE979326Ref": {
      "Ref": "IAMPermissionBoundary"
     },
     "referencetoResearchAndEngineeringStudioAdministratorEmailC15305D0Ref": {
      "Ref": "AdministratorEmail"
     },
     "referencetoResearchAndEngineeringStudioInfrastructureHostAMI2A9E06A1Ref": {
      "Ref": "InfrastructureHostAMI"
     },
     "referencetoResearchAndEngineeringStudioSSHKeyPair04C420BCRef": {
      "Ref": "SSHKeyPair"
     },
     "referencetoResearchAndEngineeringStudioClientIp2A00360DRef": {
      "Ref": "ClientIp"
     },
     "referencetoResearchAndEngineeringStudioClientPrefixListDDF46704Ref": {
      "Ref": "ClientPrefixList"
     },
     "referencetoResearchAndEngineeringStudioVpcIdF37D4FE9Ref": {
      "Ref": "VpcId"
     },
     "referencetoResearchAndEngineeringStudioIsLoadBalancerInternetFacing67AAE141Ref": {
      "Ref": "IsLoadBalancerInternetFacing"
     },
     "referencetoResearchAndEngineeringStudioCustomResourceParamsListToStringTransformer9FF59E62LOADBALANCERSUBNETS": {
      "Fn::GetAtt": [
       "CustomResourceParamsListToStringTransformer",
       "LOAD_BALANCER_SUBNETS"
      ]
     },
     "referencetoResearchAndEngineeringStudioCustomResourceParamsListToStringTransformer9FF59E62INFRASUBNETS": {
      "Fn::GetAtt": [
       "CustomResourceParamsListToStringTransformer",
       "INFRA_SUBNETS"
      ]
     },
     "referencetoResearchAndEngineeringStudioCustomResourceParamsListToStringTransformer9FF59E62VDISUBNETS": {
      "Fn::GetAtt": [
       "CustomResourceParamsListToStringTransformer",
       "VDI_SUBNETS"
      ]
     },
     "referencetoResearchAndEngineeringStudioActiveDirectoryNameD914B34BRef": {
      "Ref": "ActiveDirectoryName"
     },
     "referencetoResearchAndEngineeringStudioADShortName15A7F6EERef": {
      "Ref": "ADShortName"
     },
     "referencetoResearchAndEngineeringStudioLDAPBaseF6F7BE3CRef": {
      "Ref": "LDAPBase"
     },
     "referencetoResearchAndEngineeringStudioLDAPConnectionURI72855027Ref": {
      "Ref": "LDAPConnectionURI"
     },
     "referencetoResearchAndEngineeringStudioServiceAccountCredentialsSecretArnA85A059CRef": {
      "Ref": "ServiceAccountCredentialsSecretArn"
     },
     "referencetoResearchAndEngineeringStudioUsersOU22C2E621Ref": {
      "Ref": "UsersOU"
     },
     "referencetoResearchAndEngineeringStudioGroupsOU1282F116Ref": {
      "Ref": "GroupsOU"
     },
     "referencetoResearchAndEngineeringStudioSudoersGroupNameCF93C3ABRef": {
      "Ref": "SudoersGroupName"
     },
     "referencetoResearchAndEngineeringStudioComputersOUC722E89ARef": {
      "Ref": "ComputersOU"
     },
     "referencetoResearchAndEngineeringStudioDomainTLSCertificateSecretArn7DDD5A8DRef": {
      "Ref": "DomainTLSCertificateSecretArn"
     },
     "referencetoResearchAndEngineeringStudioEnableLdapIDMapping09ECF1BARef": {
      "Ref": "EnableLdapIDMapping"
     },
     "referencetoResearchAndEngineeringStudioDisableADJoin3B5F868ERef": {
      "Ref": "DisableADJoin"
     },
     "referencetoResearchAndEngineeringStudioSharedHomeFileSystemId8A5FFDF5Ref": {
      "Ref": "SharedHomeFileSystemId"
     },
     "referencetoResearchAndEngineeringStudioCustomDomainNameforWebApp5388C119Ref": {
      "Ref": "CustomDomainNameforWebApp"
     },
     "referencetoResearchAndEngineeringStudioACMCertificateARNforWebApp19061A82Ref": {
      "Ref": "ACMCertificateARNforWebApp"
     },
     "referencetoResearchAndEngineeringStudioCustomDomainNameforVDIE18D3E6CRef": {
      "Ref": "CustomDomainNameforVDI"
     },
     "referencetoResearchAndEngineeringStudioCertificateSecretARNforVDI9F947997Ref": {
      "Ref": "CertificateSecretARNforVDI"
     },
     "referencetoResearchAndEngineeringStudioPrivateKeySecretARNforVDID4EFE44FRef": {
      "Ref": "PrivateKeySecretARNforVDI"
     },
     "referencetoResearchAndEngineeringStudioRESlibrary7EC20E56Ref": {
      "Ref": "RESlibrary22ADD963"
     },
     "referencetoResearchAndEngineeringStudioHttpProxy5D07AE89Ref": {
      "Ref": "HttpProxy"
     },
     "referencetoResearchAndEngineeringStudioHttpsProxyCF7910D5Ref": {
      "Ref": "HttpsProxy"
     },
     "referencetoResearchAndEngineeringStudioNoProxy549A4ED6Ref": {
      "Ref": "NoProxy"
     }
    },
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "research-engineering-studio-${AWS::Region}"
       },
       "/releases/2024.12/155a93a9682fc9ab55af0114b7aa5637921c7b0d2f02adf9a392f6e4ed51e771"
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomResourceParamsListToStringTransformer",
    "resbaseconstructDcvBrokerTableDeltionRoleB800C25D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/res-base.NestedStack/res-base.NestedStackResource",
    "aws:asset:path": "ResearchAndEngineeringStudioresbaseE228B4B0.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "ResEcrRepo6ABD6A23": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "RepositoryName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-res-ecr"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ResEcrRepo/Resource"
   }
  },
  "ResEcrPush616332A9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ResEcrPush/Resource"
   }
  },
  "ResEcrPushDefaultPolicy03949012": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:CompleteLayerUpload",
        "ecr:InitiateLayerUpload",
        "ecr:PutImage",
        "ecr:UploadLayerPart"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ResEcrRepo6ABD6A23",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ResEcrPushDefaultPolicy03949012",
    "Roles": [
     {
      "Ref": "ResEcrPush616332A9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ResEcrPush/DefaultPolicy/Resource"
   }
  },
  "ResEcrPullFA20F1A7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ResEcrPull/Resource"
   }
  },
  "ResEcrPullDefaultPolicyBAF00B47": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ResEcrRepo6ABD6A23",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ResEcrPullDefaultPolicyBAF00B47",
    "Roles": [
     {
      "Ref": "ResEcrPullFA20F1A7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ResEcrPull/DefaultPolicy/Resource"
   }
  },
  "CopyImagesToRESEcrRoleC9829E0B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/CopyImagesToRESEcr/Role/Resource"
   }
  },
  "CopyImagesToRESEcrRoleDefaultPolicyC3303130": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CopyImagesToRESEcrAE5D5E0D"
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CopyImagesToRESEcrAE5D5E0D"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:BatchPutCodeCoverages",
        "codebuild:BatchPutTestCases",
        "codebuild:CreateReport",
        "codebuild:CreateReportGroup",
        "codebuild:UpdateReport"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "CopyImagesToRESEcrAE5D5E0D"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:CompleteLayerUpload",
        "ecr:DescribeImages",
        "ecr:GetDownloadUrlForLayer",
        "ecr:InitiateLayerUpload",
        "ecr:ListImages",
        "ecr:PutImage",
        "ecr:UploadLayerPart"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ResEcrRepo6ABD6A23",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CopyImagesToRESEcrRoleDefaultPolicyC3303130",
    "Roles": [
     {
      "Ref": "CopyImagesToRESEcrRoleC9829E0B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/CopyImagesToRESEcr/Role/DefaultPolicy/Resource"
   }
  },
  "CopyImagesToRESEcrAE5D5E0D": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "AWS_REGION",
       "Type": "PLAINTEXT",
       "Value": {
        "Ref": "AWS::Region"
       }
      },
      {
       "Name": "DEST_INSTALLER_REGISTRY",
       "Type": "PLAINTEXT",
       "Value": {
        "Fn::Join": [
         ":",
         [
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::Select": [
               4,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Fn::GetAtt": [
                   "ResEcrRepo6ABD6A23",
                   "Arn"
                  ]
                 }
                ]
               }
              ]
             },
             ".dkr.ecr.",
             {
              "Fn::Select": [
               3,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Fn::GetAtt": [
                   "ResEcrRepo6ABD6A23",
                   "Arn"
                  ]
                 }
                ]
               }
              ]
             },
             ".",
             {
              "Ref": "AWS::URLSuffix"
             },
             "/",
             {
              "Ref": "ResEcrRepo6ABD6A23"
             }
            ]
           ]
          },
          "installer-2024.12-3b16f438"
         ]
        ]
       }
      },
      {
       "Name": "DEST_AD_SYNC_REGISTRY",
       "Type": "PLAINTEXT",
       "Value": {
        "Fn::Join": [
         ":",
         [
          {
           "Fn::Join": [
            "",
            [
             {
              "Fn::Select": [
               4,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Fn::GetAtt": [
                   "ResEcrRepo6ABD6A23",
                   "Arn"
                  ]
                 }
                ]
               }
              ]
             },
             ".dkr.ecr.",
             {
              "Fn::Select": [
               3,
               {
                "Fn::Split": [
                 ":",
                 {
                  "Fn::GetAtt": [
                   "ResEcrRepo6ABD6A23",
                   "Arn"
                  ]
                 }
                ]
               }
              ]
             },
             ".",
             {
              "Ref": "AWS::URLSuffix"
             },
             "/",
             {
              "Ref": "ResEcrRepo6ABD6A23"
             }
            ]
           ]
          },
          "ad-sync-2024.12-3b16f438"
         ]
        ]
       }
      },
      {
       "Name": "RES_REPO_URI",
       "Type": "PLAINTEXT",
       "Value": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::Select": [
            4,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::GetAtt": [
                "ResEcrRepo6ABD6A23",
                "Arn"
               ]
              }
             ]
            }
           ]
          },
          ".dkr.ecr.",
          {
           "Fn::Select": [
            3,
            {
             "Fn::Split": [
              ":",
              {
               "Fn::GetAtt": [
                "ResEcrRepo6ABD6A23",
                "Arn"
               ]
              }
             ]
            }
           ]
          },
          ".",
          {
           "Ref": "AWS::URLSuffix"
          },
          "/",
          {
           "Ref": "ResEcrRepo6ABD6A23"
          }
         ]
        ]
       }
      }
     ],
     "Image": "aws/codebuild/amazonlinux2-x86_64-standard:5.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "Name": {
     "Fn::Join": [
      "-",
      [
       {
        "Ref": "EnvironmentName"
       },
       "copy-images-to-res-ecr"
      ]
     ]
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CopyImagesToRESEcrRoleC9829E0B",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"docker pull public.ecr.aws/l6g7n3r5/research-engineering-studio:installer-2024.12-3b16f438\",\n        \"docker tag public.ecr.aws/l6g7n3r5/research-engineering-studio:installer-2024.12-3b16f438 ${DEST_INSTALLER_REGISTRY}\",\n        \"aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${RES_REPO_URI}\",\n        \"docker push ${DEST_INSTALLER_REGISTRY}\",\n        \"docker pull public.ecr.aws/l6g7n3r5/research-engineering-studio:ad-sync-2024.12-3b16f438\",\n        \"docker tag public.ecr.aws/l6g7n3r5/research-engineering-studio:ad-sync-2024.12-3b16f438 ${DEST_AD_SYNC_REGISTRY}\",\n        \"aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${RES_REPO_URI}\",\n        \"docker push ${DEST_AD_SYNC_REGISTRY}\"\n      ]\n    }\n  }\n}",
     "Type": "NO_SOURCE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/CopyImagesToRESEcr/Resource"
   }
  },
  "EcrImageHandlerRole13A6F785": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    },
    "RoleName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-ecr-image-handler-role"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/EcrImageHandlerRole/Resource"
   }
  },
  "EcrImageHandlerRolePolicyCE134C34": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "logs:CreateLogGroup",
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "CloudWatchLogsPermissions"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:DeleteLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*",
       "Sid": "CloudWatchLogStreamPermissions"
      },
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CopyImagesToRESEcrAE5D5E0D",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchDeleteImage",
        "ecr:ListImages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "ResEcrRepo6ABD6A23",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-custom-resource-ecr-image-handler-role-policy"
      ]
     ]
    },
    "Roles": [
     {
      "Ref": "EcrImageHandlerRole13A6F785"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/EcrImageHandlerRolePolicy/Resource"
   }
  },
  "EcrImageHandler2E679B00": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742.zip"
    },
    "Description": "Lambda to handle the code build events",
    "Handler": "ecr_images_handler.handle_request",
    "Role": {
     "Fn::GetAtt": [
      "EcrImageHandlerRole13A6F785",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "CopyImagesToRESEcrAE5D5E0D",
    "CopyImagesToRESEcrRoleDefaultPolicyC3303130",
    "CopyImagesToRESEcrRoleC9829E0B",
    "EcrImageHandlerRole13A6F785",
    "EcrImageHandlerRolePolicyCE134C34"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/EcrImageHandler/Resource",
    "aws:asset:path": "asset.2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CustomResourceEcrImageHandler": {
   "Type": "Custom::RES",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "EcrImageHandler2E679B00",
      "Arn"
     ]
    },
    "ProjectName": {
     "Ref": "CopyImagesToRESEcrAE5D5E0D"
    },
    "ResEcrRepositoryName": {
     "Ref": "ResEcrRepo6ABD6A23"
    },
    "InstallerRegistryName": "public.ecr.aws/l6g7n3r5/research-engineering-studio:installer-2024.12-3b16f438",
    "ADSyncRegistryName": "public.ecr.aws/l6g7n3r5/research-engineering-studio:ad-sync-2024.12-3b16f438"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/CustomResourceEcrImageHandler/Default"
   }
  },
  "adsyncNestedStackadsyncNestedStackResourceE74681A9": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "Parameters": {
     "referencetoResearchAndEngineeringStudioEnvironmentName73279C6BRef": {
      "Ref": "EnvironmentName"
     },
     "referencetoResearchAndEngineeringStudioVpcIdF37D4FE9Ref": {
      "Ref": "VpcId"
     },
     "referencetoResearchAndEngineeringStudioIAMPermissionBoundaryAE979326Ref": {
      "Ref": "IAMPermissionBoundary"
     },
     "referencetoResearchAndEngineeringStudioRESlibrary7EC20E56Ref": {
      "Ref": "RESlibrary22ADD963"
     },
     "referencetoResearchAndEngineeringStudioResEcrRepoC38D80E6Arn": {
      "Fn::GetAtt": [
       "ResEcrRepo6ABD6A23",
       "Arn"
      ]
     },
     "referencetoResearchAndEngineeringStudioResEcrRepoC38D80E6Ref": {
      "Ref": "ResEcrRepo6ABD6A23"
     }
    },
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "research-engineering-studio-${AWS::Region}"
       },
       "/releases/2024.12/8802504cce575732dcb3f29cc2fbdc3f42768bf803bc706f09d9a983b2d0f06b"
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomResourceEcrImageHandler",
    "resbaseNestedStackresbaseNestedStackResource2414FD16",
    "RESlibrary22ADD963"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/ad-sync.NestedStack/ad-sync.NestedStackResource",
    "aws:asset:path": "ResearchAndEngineeringStudioadsync380F0AE9.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute53ServiceRoleF77E74B8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "DependsOn": [
    "resbaseconstructdcvBrokerTableDeletionCustomResource4F27006C",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEvent4B420C74",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleDefaultPolicy3C35CC84",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A",
    "resbaseconstructDcvBrokerTableDeltionRoleB800C25D"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/remove-leftover-bastion-host-resource/cr-to-cleanup-bastion-host-and-route53/ServiceRole/Resource"
   }
  },
  "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute53ServiceRoleDefaultPolicy97487933": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "ec2:TerminateInstances",
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/",
           {
            "Ref": "EnvironmentName"
           },
           ".*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":ec2:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":instance/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":route53:::hostedzone/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "ec2:DescribeInstances",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute53ServiceRoleDefaultPolicy97487933",
    "Roles": [
     {
      "Ref": "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute53ServiceRoleF77E74B8"
     }
    ]
   },
   "DependsOn": [
    "resbaseconstructdcvBrokerTableDeletionCustomResource4F27006C",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEvent4B420C74",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleDefaultPolicy3C35CC84",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A",
    "resbaseconstructDcvBrokerTableDeltionRoleB800C25D"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/remove-leftover-bastion-host-resource/cr-to-cleanup-bastion-host-and-route53/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute5368669146": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742.zip"
    },
    "Description": "Lambda to remove the bastion host instance and Route53 record.",
    "Handler": "installer_handlers.handle_bastion_host_delete",
    "Role": {
     "Fn::GetAtt": [
      "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute53ServiceRoleF77E74B8",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 600
   },
   "DependsOn": [
    "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute53ServiceRoleDefaultPolicy97487933",
    "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute53ServiceRoleF77E74B8",
    "resbaseconstructdcvBrokerTableDeletionCustomResource4F27006C",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEvent4B420C74",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleDefaultPolicy3C35CC84",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A",
    "resbaseconstructDcvBrokerTableDeltionRoleB800C25D"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/remove-leftover-bastion-host-resource/cr-to-cleanup-bastion-host-and-route53/Resource",
    "aws:asset:path": "asset.2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "removeleftoverbastionhostresourcecleanupbastionhostandroute53139D7193": {
   "Type": "Custom::BastionHostAndRoute53Cleanup",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "removeleftoverbastionhostresourcecrtocleanupbastionhostandroute5368669146",
      "Arn"
     ]
    },
    "cluster_name": {
     "Ref": "EnvironmentName"
    }
   },
   "DependsOn": [
    "resbaseconstructdcvBrokerTableDeletionCustomResource4F27006C",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEvent4B420C74",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleDefaultPolicy3C35CC84",
    "resbaseconstructdcvBrokerTableDeletionProviderframeworkonEventServiceRoleBBEBF62A",
    "resbaseconstructDcvBrokerTableDeltionRoleB800C25D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/remove-leftover-bastion-host-resource/cleanup-bastion-host-and-route53/Default"
   }
  },
  "InstallerCustomResourceEventHandlerServiceRole1092BCCA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/CustomResourceEventHandler/ServiceRole/Resource"
   }
  },
  "InstallerCustomResourceEventHandlerServiceRoleDefaultPolicy42CAD6CC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "InstallerInstallerStateMachineEAA7045D"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerCustomResourceEventHandlerServiceRoleDefaultPolicy42CAD6CC",
    "Roles": [
     {
      "Ref": "InstallerCustomResourceEventHandlerServiceRole1092BCCA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/CustomResourceEventHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "InstallerCustomResourceEventHandlerA89E1A8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742.zip"
    },
    "Description": "Lambda to handle the CFN custom resource events",
    "Environment": {
     "Variables": {
      "SFN_ARN": {
       "Ref": "InstallerInstallerStateMachineEAA7045D"
      }
     }
    },
    "Handler": "installer_handlers.handle_custom_resource_lifecycle_event",
    "Role": {
     "Fn::GetAtt": [
      "InstallerCustomResourceEventHandlerServiceRole1092BCCA",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "InstallerCustomResourceEventHandlerServiceRoleDefaultPolicy42CAD6CC",
    "InstallerCustomResourceEventHandlerServiceRole1092BCCA"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/CustomResourceEventHandler/Resource",
    "aws:asset:path": "asset.2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallerInstallerWaitConditionHandle17339533816B7BD9B1": {
   "Type": "AWS::CloudFormation::WaitConditionHandle",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/InstallerWaitConditionHandle1733953381"
   }
  },
  "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleCEA12CFC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/cr-to-remove-leftover-security-groups/ServiceRole/Resource"
   }
  },
  "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleDefaultPolicy82C698B7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DeleteNetworkInterface",
        "ec2:DeleteSecurityGroup",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleDefaultPolicy82C698B7",
    "Roles": [
     {
      "Ref": "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleCEA12CFC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/cr-to-remove-leftover-security-groups/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsE0526B2C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742.zip"
    },
    "Description": "Lambda to remove left over security groups.",
    "Handler": "installer_handlers.handle_security_group_delete",
    "Role": {
     "Fn::GetAtt": [
      "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleCEA12CFC",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 300
   },
   "DependsOn": [
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleDefaultPolicy82C698B7",
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleCEA12CFC"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/cr-to-remove-leftover-security-groups/Resource",
    "aws:asset:path": "asset.2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40": {
   "Type": "Custom::SecurityGroupDeletion",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsE0526B2C",
      "Arn"
     ]
    },
    "security_group_name": {
     "Fn::Join": [
      "",
      [
       "[\"",
       {
        "Ref": "EnvironmentName"
       },
       "_proxy-lambda-security-group-id\", \"",
       {
        "Ref": "EnvironmentName"
       },
       "_backend-lambda-security-group-name\", \"",
       {
        "Ref": "EnvironmentName"
       },
       "_cognito-sync-lambda-security-group\", \"",
       {
        "Ref": "EnvironmentName"
       },
       "_uid_cognito-trigger-workflow-lambda-security-group\", \"",
       {
        "Ref": "EnvironmentName"
       },
       "_post_auth_cognito-trigger-workflow-lambda-security-group\"]"
      ]
     ]
    },
    "vpc_id": {
     "Ref": "VpcId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-security-group/Default"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction082BAFCAB": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"DeleteFunctionCommand\",\"service\":\"@aws-sdk/client-lambda\",\"ignoreErrorCodesMatching\":\"ResourceNotFoundException\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "_aws-api-proxy-lambda\"},\"physicalResourceId\":{\"id\":\"remove-proxy-lambda-function-cr\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction0CustomResourcePolicy58B43A0F",
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-0/Resource/Default"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction0CustomResourcePolicy58B43A0F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "lambda:DeleteFunction",
        "lambda:GetFunction"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction0CustomResourcePolicy58B43A0F",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-0/CustomResourcePolicy/Resource"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1136AD8CE": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"DeleteFunctionCommand\",\"service\":\"@aws-sdk/client-lambda\",\"ignoreErrorCodesMatching\":\"ResourceNotFoundException\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "_backend-lambda\"},\"physicalResourceId\":{\"id\":\"remove-proxy-lambda-function-cr\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1CustomResourcePolicyA744D9E6",
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-1/Resource/Default"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1CustomResourcePolicyA744D9E6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "lambda:DeleteFunction",
        "lambda:GetFunction"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1CustomResourcePolicyA744D9E6",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-1/CustomResourcePolicy/Resource"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction202216275": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"DeleteFunctionCommand\",\"service\":\"@aws-sdk/client-lambda\",\"ignoreErrorCodesMatching\":\"ResourceNotFoundException\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "_cognito-sync-lambda\"},\"physicalResourceId\":{\"id\":\"remove-proxy-lambda-function-cr\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction2CustomResourcePolicyAE885E7A",
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-2/Resource/Default"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction2CustomResourcePolicyAE885E7A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "lambda:DeleteFunction",
        "lambda:GetFunction"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction2CustomResourcePolicyAE885E7A",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-2/CustomResourcePolicy/Resource"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3F23F16F7": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"DeleteFunctionCommand\",\"service\":\"@aws-sdk/client-lambda\",\"ignoreErrorCodesMatching\":\"ResourceNotFoundException\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "_uid_cognito-trigger-workflow-lambda\"},\"physicalResourceId\":{\"id\":\"remove-proxy-lambda-function-cr\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3CustomResourcePolicyB44C5C30",
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-3/Resource/Default"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3CustomResourcePolicyB44C5C30": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "lambda:DeleteFunction",
        "lambda:GetFunction"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3CustomResourcePolicyB44C5C30",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-3/CustomResourcePolicy/Resource"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4963627E4": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"DeleteFunctionCommand\",\"service\":\"@aws-sdk/client-lambda\",\"ignoreErrorCodesMatching\":\"ResourceNotFoundException\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "_post_auth_cognito-trigger-workflow-lambda\"},\"physicalResourceId\":{\"id\":\"remove-proxy-lambda-function-cr\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4CustomResourcePolicyF1B3B761",
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-4/Resource/Default"
   }
  },
  "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4CustomResourcePolicyF1B3B761": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "lambda:DeleteFunction",
        "lambda:GetFunction"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4CustomResourcePolicyF1B3B761",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/remove-leftover-lambda-and-sg-resources/remove-lambda-function-4/CustomResourcePolicy/Resource"
   }
  },
  "Installer0D856A54": {
   "Type": "Custom::RES",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "InstallerCustomResourceEventHandlerA89E1A8A",
      "Arn"
     ]
    },
    "CALLBACK_URL": {
     "Ref": "InstallerInstallerWaitConditionHandle17339533816B7BD9B1"
    },
    "INSTALLER_ECR_REPO_NAME": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-res-ecr"
      ]
     ]
    },
    "ENVIRONMENT_NAME": {
     "Ref": "EnvironmentName"
    }
   },
   "DependsOn": [
    "CustomResourceEcrImageHandler",
    "InstallerInstallerStateMachineEAA7045D",
    "InstallerInstallerStateMachineRoleDefaultPolicyC7A52C7D",
    "InstallerInstallerStateMachineRole6DA34EFE",
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsE0526B2C",
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleDefaultPolicy82C698B7",
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleCEA12CFC",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction0CustomResourcePolicy58B43A0F",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction082BAFCAB",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1CustomResourcePolicyA744D9E6",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1136AD8CE",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction2CustomResourcePolicyAE885E7A",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction202216275",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3CustomResourcePolicyB44C5C30",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3F23F16F7",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4CustomResourcePolicyF1B3B761",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4963627E4",
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40",
    "InstallerTasksClusterA78B7F2B",
    "InstallerTasksCreateSecurityGroup514FFF0D",
    "InstallerTasksCreateTaskDefCreateContainerLogGroupB0BB7610",
    "InstallerTasksCreateTaskDef12809FCD",
    "InstallerTasksDeleteSecurityGroupD7708443",
    "InstallerTasksDeleteTaskDefDeleteContainerLogGroup20006B67",
    "InstallerTasksDeleteTaskDefDDA0ECF3",
    "InstallerTasksPermissionsPipelineRoleDefaultPolicy8E41116D",
    "InstallerTasksPermissionsPipelineRoleD0D276F9",
    "InstallerTasksUpdateSecurityGroup3269C5D9",
    "InstallerTasksUpdateTaskDef1EDBDB9C",
    "InstallerTasksUpdateTaskDefUpdateContainerLogGroupF3D746B9",
    "resbaseNestedStackresbaseNestedStackResource2414FD16",
    "RESlibrary22ADD963"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Installer/Default"
   }
  },
  "InstallerInstallerWaitCondition1733953381A3EC23A6": {
   "Type": "AWS::CloudFormation::WaitCondition",
   "Properties": {
    "Count": 1,
    "Handle": {
     "Ref": "InstallerInstallerWaitConditionHandle17339533816B7BD9B1"
    },
    "Timeout": "7200"
   },
   "DependsOn": [
    "Installer0D856A54"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/InstallerWaitCondition1733953381"
   }
  },
  "InstallercognitosynclambdagetclustersettingidentityprovidercognitosudoersgroupnameB5013270": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.sudoers.group_name\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.sudoers.group_name\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.sudoers.group_name\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.sudoers.group_name\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdagetclustersettingidentityprovidercognitosudoersgroupnameCustomResourcePolicy1EB0D991",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-identity-provider.cognito.sudoers.group_name/Resource/Default"
   }
  },
  "InstallercognitosynclambdagetclustersettingidentityprovidercognitosudoersgroupnameCustomResourcePolicy1EB0D991": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdagetclustersettingidentityprovidercognitosudoersgroupnameCustomResourcePolicy1EB0D991",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-identity-provider.cognito.sudoers.group_name/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitosynclambdagetclustersettingidentityprovidercognitouserpoolid09DB8DC6": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.user_pool_id\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.user_pool_id\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.user_pool_id\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.user_pool_id\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdagetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicy689F0040",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-identity-provider.cognito.user_pool_id/Resource/Default"
   }
  },
  "InstallercognitosynclambdagetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicy689F0040": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdagetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicy689F0040",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-identity-provider.cognito.user_pool_id/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitosynclambdagetclustersettingclusteradministratorusername77760F39": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.administrator_username\"}}},\"physicalResourceId\":{\"id\":\"cluster.administrator_username\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.administrator_username\"}}},\"physicalResourceId\":{\"id\":\"cluster.administrator_username\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdagetclustersettingclusteradministratorusernameCustomResourcePolicyD281F890",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.administrator_username/Resource/Default"
   }
  },
  "InstallercognitosynclambdagetclustersettingclusteradministratorusernameCustomResourcePolicyD281F890": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdagetclustersettingclusteradministratorusernameCustomResourcePolicyD281F890",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.administrator_username/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerD0B0BA56": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy27574C22",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.network.security_groups.external-load-balancer/Resource/Default"
   }
  },
  "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy27574C22": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy27574C22",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.network.security_groups.external-load-balancer/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitosynclambdagetclustersettingclusternetworkvpcidF959BEE2": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdagetclustersettingclusternetworkvpcidCustomResourcePolicy9CE1ED2F",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.network.vpc_id/Resource/Default"
   }
  },
  "InstallercognitosynclambdagetclustersettingclusternetworkvpcidCustomResourcePolicy9CE1ED2F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdagetclustersettingclusternetworkvpcidCustomResourcePolicy9CE1ED2F",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.network.vpc_id/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitosynclambdagetclustersettingclusternetworkprivatesubnets17357EA7": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdagetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy2BD625E4",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.network.private_subnets/Resource/Default"
   }
  },
  "InstallercognitosynclambdagetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy2BD625E4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdagetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy2BD625E4",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/get-cluster-setting-cluster.network.private_subnets/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitosynclambdaLambdaExecutionRole699EE732": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/LambdaExecutionRole/Resource"
   }
  },
  "InstallercognitosynclambdaLambdaExecutionRoleDefaultPolicy6747ABC8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:DeleteItem",
        "dynamodb:PutItem",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/",
           {
            "Ref": "EnvironmentName"
           },
           ".accounts.group-members"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/",
           {
            "Ref": "EnvironmentName"
           },
           ".accounts.groups"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/",
           {
            "Ref": "EnvironmentName"
           },
           ".accounts.users"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cognito-idp:AdminDisableUser",
        "cognito-idp:ListGroups",
        "cognito-idp:ListUsers",
        "cognito-idp:ListUsersInGroup"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cognito-idp:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::GetAtt": [
            "Installercognitosynclambdagetclustersettingidentityprovidercognitouserpoolid09DB8DC6",
            "Item.value.S"
           ]
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdaLambdaExecutionRoleDefaultPolicy6747ABC8",
    "Roles": [
     {
      "Ref": "InstallercognitosynclambdaLambdaExecutionRole699EE732"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "InstallercognitosynclambdacognitosyncCD71593F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f.zip"
    },
    "Description": "Sync users and groups from Cognito to DDB",
    "Environment": {
     "Variables": {
      "CUSTOM_UID_ATTRIBUTE": "custom:uid",
      "COGNITO_SUDOER_GROUP_NAME": {
       "Fn::GetAtt": [
        "InstallercognitosynclambdagetclustersettingidentityprovidercognitosudoersgroupnameB5013270",
        "Item.value.S"
       ]
      },
      "COGNITO_USER_POOL_ID": {
       "Fn::GetAtt": [
        "Installercognitosynclambdagetclustersettingidentityprovidercognitouserpoolid09DB8DC6",
        "Item.value.S"
       ]
      },
      "CLUSTER_NAME": {
       "Ref": "EnvironmentName"
      },
      "COGNITO_USER_IDP_TYPE": "Native user",
      "SSO_USER_IDP_TYPE": "SSO",
      "COGNITO_MIN_ID_INCLUSIVE": "2000200001",
      "COGNITO_DEFAULT_USER_GROUP": "res",
      "GROUP_TYPE_PROJECT": "project",
      "GROUP_TYPE_INTERNAL": "internal",
      "ADMIN_ROLE": "admin",
      "USER_ROLE": "user",
      "CLUSTER_ADMIN_NAME": {
       "Fn::GetAtt": [
        "Installercognitosynclambdagetclustersettingclusteradministratorusername77760F39",
        "Item.value.S"
       ]
      },
      "HTTP_PROXY": {
       "Ref": "HttpProxy"
      },
      "HTTPS_PROXY": {
       "Ref": "HttpsProxy"
      },
      "NO_PROXY": {
       "Ref": "NoProxy"
      }
     }
    },
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_cognito-sync-lambda"
      ]
     ]
    },
    "Handler": "cognito_sync_handler.handle_cognito_sync",
    "ReservedConcurrentExecutions": 1,
    "Role": {
     "Fn::GetAtt": [
      "InstallercognitosynclambdaLambdaExecutionRole699EE732",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "InstallercognitosynclambdaLambdaExecutionRoleDefaultPolicy6747ABC8",
    "InstallercognitosynclambdaLambdaExecutionRole699EE732",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/cognito-sync/Resource",
    "aws:asset:path": "asset.de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallercognitosynclambdaLambdaSecurityGroup86084F71": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Lambda security group",
    "GroupName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_cognito-sync-lambda-security-group"
      ]
     ]
    },
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 53,
      "IpProtocol": "udp",
      "ToPort": 53
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 1024,
      "IpProtocol": "tcp",
      "ToPort": 65535
     }
    ],
    "SecurityGroupIngress": [
     {
      "FromPort": 443,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerD0B0BA56",
        "Item.value.S"
       ]
      },
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "InstallercognitosynclambdagetclustersettingclusternetworkvpcidF959BEE2",
      "Item.value.S"
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/LambdaSecurityGroup"
   }
  },
  "Installercognitosynclambdaaddvpcconfigtolambda06711ACD": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallercognitosynclambdacognitosyncCD71593F"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "Installercognitosynclambdagetclustersettingclusternetworkprivatesubnets17357EA7",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "Installercognitosynclambdagetclustersettingclusternetworkprivatesubnets17357EA7",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallercognitosynclambdaLambdaSecurityGroup86084F71",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "InstallercognitosynclambdacognitosyncCD71593F"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallercognitosynclambdacognitosyncCD71593F"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "Installercognitosynclambdagetclustersettingclusternetworkprivatesubnets17357EA7",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "Installercognitosynclambdagetclustersettingclusternetworkprivatesubnets17357EA7",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallercognitosynclambdaLambdaSecurityGroup86084F71",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "InstallercognitosynclambdacognitosyncCD71593F"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdaaddvpcconfigtolambdaCustomResourcePolicy7E945652",
    "InstallercognitosynclambdacognitosyncCD71593F",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallercognitosynclambdaaddvpcconfigtolambdaCustomResourcePolicy7E945652": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdaaddvpcconfigtolambdaCustomResourcePolicy7E945652",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallercognitosynclambdacognitosyncCD71593F",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitosynclambdaremovevpcaddvpcconfigtolambdaB6381975": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallercognitosynclambdacognitosyncCD71593F"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[],\"SecurityGroupIds\":[]}},\"physicalResourceId\":{\"id\":\"remove-vpc",
       {
        "Ref": "InstallercognitosynclambdacognitosyncCD71593F"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdacognitosyncCD71593F",
    "InstallercognitosynclambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy11B9268F",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/remove-vpc-add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallercognitosynclambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy11B9268F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy11B9268F",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallercognitosynclambdacognitosyncCD71593F",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/remove-vpc-add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitosynclambdaRemoveIngressRuleOnALB46312223": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"revokeSecurityGroupIngress\",\"service\":\"EC2\",\"parameters\":{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallercognitosynclambdaLambdaSecurityGroup86084F71",
         "GroupId"
        ]
       },
       "\",\"IpPermissions\":[{\"IpProtocol\":\"tcp\",\"FromPort\":443,\"ToPort\":443,\"UserIdGroupPairs\":[{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerD0B0BA56",
         "Item.value.S"
        ]
       },
       "\"}]}]},\"physicalResourceId\":{\"id\":\"",
       {
        "Fn::GetAtt": [
         "InstallercognitosynclambdaLambdaSecurityGroup86084F71",
         "GroupId"
        ]
       },
       "-specific-ingress-removal\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitosynclambdaRemoveIngressRuleOnALBCustomResourcePolicyCBDCCA1C",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/RemoveIngressRuleOnALB/Resource/Default"
   }
  },
  "InstallercognitosynclambdaRemoveIngressRuleOnALBCustomResourcePolicyCBDCCA1C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:RevokeSecurityGroupIngress",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitosynclambdaRemoveIngressRuleOnALBCustomResourcePolicyCBDCCA1C",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/RemoveIngressRuleOnALB/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitosynclambdacognitosyncrule75484F22": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "Description": "trigger cognito sync lambda every hour",
    "ScheduleExpression": "rate(1 hour)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "InstallercognitosynclambdacognitosyncCD71593F",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/cognito-sync-rule/Resource"
   }
  },
  "InstallercognitosynclambdacognitosyncruleAllowEventRuleResearchAndEngineeringStudioInstallercognitosynclambdacognitosync6A1637B38B38DD78": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InstallercognitosynclambdacognitosyncCD71593F",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "Installercognitosynclambdacognitosyncrule75484F22",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-sync-lambda/cognito-sync-rule/AllowEventRuleResearchAndEngineeringStudioInstallercognitosynclambdacognitosync6A1637B3"
   }
  },
  "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.user_pool_id\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.user_pool_id\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.user_pool_id\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.user_pool_id\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicyB8455672",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-identity-provider.cognito.user_pool_id/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicyB8455672": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicyB8455672",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-identity-provider.cognito.user_pool_id/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancer09B00C0A": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy58FB1B52",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.network.security_groups.external-load-balancer/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy58FB1B52": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy58FB1B52",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.network.security_groups.external-load-balancer/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowgetclustersettingclusternetworkvpcid966FB5C2": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowgetclustersettingclusternetworkvpcidCustomResourcePolicyCC7D1CE3",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.network.vpc_id/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowgetclustersettingclusternetworkvpcidCustomResourcePolicyCC7D1CE3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowgetclustersettingclusternetworkvpcidCustomResourcePolicyCC7D1CE3",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.network.vpc_id/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy8FBED546",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.network.private_subnets/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy8FBED546": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy8FBED546",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.network.private_subnets/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitotriggerworkflowLambdaSecurityGroupuid5C887C1F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Lambda security group",
    "GroupName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_uid_cognito-trigger-workflow-lambda-security-group"
      ]
     ]
    },
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 53,
      "IpProtocol": "udp",
      "ToPort": 53
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 1024,
      "IpProtocol": "tcp",
      "ToPort": 65535
     }
    ],
    "SecurityGroupIngress": [
     {
      "FromPort": 443,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "Installercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancer09B00C0A",
        "Item.value.S"
       ]
      },
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "Installercognitotriggerworkflowgetclustersettingclusternetworkvpcid966FB5C2",
      "Item.value.S"
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/LambdaSecurityGroupuid"
   }
  },
  "InstallercognitotriggerworkflowLambdaSecurityGrouppostauth637813B9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Lambda security group",
    "GroupName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_post_auth_cognito-trigger-workflow-lambda-security-group"
      ]
     ]
    },
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 53,
      "IpProtocol": "udp",
      "ToPort": 53
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 1024,
      "IpProtocol": "tcp",
      "ToPort": 65535
     }
    ],
    "SecurityGroupIngress": [
     {
      "FromPort": 443,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "Installercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancer09B00C0A",
        "Item.value.S"
       ]
      },
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "Installercognitotriggerworkflowgetclustersettingclusternetworkvpcid966FB5C2",
      "Item.value.S"
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/LambdaSecurityGrouppostauth"
   }
  },
  "Installercognitotriggerworkflowpostauthlambdarole605E8B49": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/post-auth-lambda-role/Resource"
   }
  },
  "InstallercognitotriggerworkflowpostauthlambdaroleDefaultPolicy9DD43A94": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".accounts.users"
         ]
        ]
       }
      },
      {
       "Action": "cognito-idp:ListUsers",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cognito-idp:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::GetAtt": [
            "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
            "Item.value.S"
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Installercognitopostauthsqsqueue2F2D9A3B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowpostauthlambdaroleDefaultPolicy9DD43A94",
    "Roles": [
     {
      "Ref": "Installercognitotriggerworkflowpostauthlambdarole605E8B49"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/post-auth-lambda-role/DefaultPolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowcognitopostauth5850DFD5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f.zip"
    },
    "Description": "Add user event to post auth SQS queue for users that don't have UID",
    "Environment": {
     "Variables": {
      "COGNITO_USER_IDP_TYPE": "Native user",
      "CLUSTER_NAME": {
       "Ref": "EnvironmentName"
      },
      "QUEUE_URL": {
       "Ref": "Installercognitopostauthsqsqueue2F2D9A3B"
      }
     }
    },
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_post_auth_cognito-trigger-workflow-lambda"
      ]
     ]
    },
    "Handler": "cognito_trigger_workflow_post_auth_handler.handle_event",
    "Role": {
     "Fn::GetAtt": [
      "Installercognitotriggerworkflowpostauthlambdarole605E8B49",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 5
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowpostauthlambdaroleDefaultPolicy9DD43A94",
    "Installercognitotriggerworkflowpostauthlambdarole605E8B49",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/cognito-post-auth/Resource",
    "aws:asset:path": "asset.de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "Installercognitotriggerworkflowcognitopostauthinvokepostauthpermission42A06814": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "Installercognitotriggerworkflowcognitopostauth5850DFD5",
      "Arn"
     ]
    },
    "Principal": "cognito-idp.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":cognito-idp:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":userpool/",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
         "Item.value.S"
        ]
       }
      ]
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/cognito-post-auth/invoke-post-auth-permission"
   }
  },
  "InstallercognitotriggerworkflowaddvpcconfigtolambdaC8B36278": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "Installercognitotriggerworkflowcognitopostauth5850DFD5"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGrouppostauth637813B9",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "Installercognitotriggerworkflowcognitopostauth5850DFD5"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "Installercognitotriggerworkflowcognitopostauth5850DFD5"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGrouppostauth637813B9",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "Installercognitotriggerworkflowcognitopostauth5850DFD5"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowaddvpcconfigtolambdaCustomResourcePolicy1FC65E2C",
    "Installercognitotriggerworkflowcognitopostauthinvokepostauthpermission42A06814",
    "Installercognitotriggerworkflowcognitopostauth5850DFD5",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowaddvpcconfigtolambdaCustomResourcePolicy1FC65E2C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowaddvpcconfigtolambdaCustomResourcePolicy1FC65E2C",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "Installercognitotriggerworkflowcognitopostauthinvokepostauthpermission42A06814",
    "Installercognitotriggerworkflowcognitopostauth5850DFD5",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowremovevpcaddvpcconfigtolambda49114972": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "Installercognitotriggerworkflowcognitopostauth5850DFD5"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[],\"SecurityGroupIds\":[]}},\"physicalResourceId\":{\"id\":\"remove-vpc",
       {
        "Ref": "Installercognitotriggerworkflowcognitopostauth5850DFD5"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installercognitotriggerworkflowcognitopostauthinvokepostauthpermission42A06814",
    "Installercognitotriggerworkflowcognitopostauth5850DFD5",
    "InstallercognitotriggerworkflowremovevpcaddvpcconfigtolambdaCustomResourcePolicy2193FDE8",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/remove-vpc-add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowremovevpcaddvpcconfigtolambdaCustomResourcePolicy2193FDE8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowremovevpcaddvpcconfigtolambdaCustomResourcePolicy2193FDE8",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "Installercognitotriggerworkflowcognitopostauthinvokepostauthpermission42A06814",
    "Installercognitotriggerworkflowcognitopostauth5850DFD5",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/remove-vpc-add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsname64DCD969": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.load_balancers.external_alb.load_balancer_dns_name\"}}},\"physicalResourceId\":{\"id\":\"cluster.load_balancers.external_alb.load_balancer_dns_name\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.load_balancers.external_alb.load_balancer_dns_name\"}}},\"physicalResourceId\":{\"id\":\"cluster.load_balancers.external_alb.load_balancer_dns_name\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsnameCustomResourcePolicy6B4E7965",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.load_balancers.external_alb.load_balancer_dns_name/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsnameCustomResourcePolicy6B4E7965": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsnameCustomResourcePolicy6B4E7965",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/get-cluster-setting-cluster.load_balancers.external_alb.load_balancer_dns_name/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowupdateuserpool68EDDA70": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"updateUserPool\",\"service\":\"CognitoIdentityServiceProvider\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
         "Item.value.S"
        ]
       },
       "\",\"LambdaConfig\":{\"PostAuthentication\":\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowcognitopostauth5850DFD5",
         "Arn"
        ]
       },
       "\"},\"AdminCreateUserConfig\":{\"InviteMessageTemplate\":{\"EmailMessage\":\"<p>Hello <b>{username},</b></p>\\n<p>You have been invited to join the <b>",
       {
        "Ref": "EnvironmentName"
       },
       "</b> environment.</p>\\n<p>Your temporary password is:</p>\\n<h3>{####}</h3>\\n<p>You can sign in to your account using the link below: <br/>\\n<a href=\\\"https://",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsname64DCD969",
         "Item.value.S"
        ]
       },
       "\\\">https://",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsname64DCD969",
         "Item.value.S"
        ]
       },
       "</a></p>\\n<p>---<br/>\\n<b>RES Environment Admin</b></p>\",\"EmailSubject\":\"Invitation to Join RES Environment: ",
       {
        "Ref": "EnvironmentName"
       },
       "\"}},\"AutoVerifiedAttributes\":[\"email\"]},\"physicalResourceId\":{\"id\":\"update-user-pool-action\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"updateUserPool\",\"service\":\"CognitoIdentityServiceProvider\",\"parameters\":{\"UserPoolId\":\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
         "Item.value.S"
        ]
       },
       "\",\"LambdaConfig\":{\"PostAuthentication\":\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowcognitopostauth5850DFD5",
         "Arn"
        ]
       },
       "\"},\"AdminCreateUserConfig\":{\"InviteMessageTemplate\":{\"EmailMessage\":\"<p>Hello <b>{username},</b></p>\\n<p>You have been invited to join the <b>",
       {
        "Ref": "EnvironmentName"
       },
       "</b> environment.</p>\\n<p>Your temporary password is:</p>\\n<h3>{####}</h3>\\n<p>You can sign in to your account using the link below: <br/>\\n<a href=\\\"https://",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsname64DCD969",
         "Item.value.S"
        ]
       },
       "\\\">https://",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsname64DCD969",
         "Item.value.S"
        ]
       },
       "</a></p>\\n<p>---<br/>\\n<b>RES Environment Admin</b></p>\",\"EmailSubject\":\"Invitation to Join RES Environment: ",
       {
        "Ref": "EnvironmentName"
       },
       "\"}},\"AutoVerifiedAttributes\":[\"email\"]},\"physicalResourceId\":{\"id\":\"update-user-pool-action\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowupdateuserpoolCustomResourcePolicy45A822EA",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/update-user-pool/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowupdateuserpoolCustomResourcePolicy45A822EA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:UpdateUserPool",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cognito-idp:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::GetAtt": [
            "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
            "Item.value.S"
           ]
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowupdateuserpoolCustomResourcePolicy45A822EA",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/update-user-pool/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitotriggerworkflowuidlambdaroleB379713F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/uid-lambda-role/Resource"
   }
  },
  "InstallercognitotriggerworkflowuidlambdaroleDefaultPolicy25239190": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:GetItem",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".accounts.users"
         ]
        ]
       }
      },
      {
       "Action": [
        "cognito-idp:AdminUpdateUserAttributes",
        "cognito-idp:ListUsers"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cognito-idp:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::GetAtt": [
            "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
            "Item.value.S"
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "Installercognitopostauthsqsqueue2F2D9A3B",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowuidlambdaroleDefaultPolicy25239190",
    "Roles": [
     {
      "Ref": "InstallercognitotriggerworkflowuidlambdaroleB379713F"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/uid-lambda-role/DefaultPolicy/Resource"
   }
  },
  "Installercognitotriggerworkflowgenerateuid9E7424E3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f.zip"
    },
    "Description": "Add uuid for users that don't have one. Add uid to Cognito and DDB",
    "Environment": {
     "Variables": {
      "CUSTOM_UID_ATTRIBUTE": "custom:uid",
      "COGNITO_MIN_ID_INCLUSIVE": "2000200001",
      "COGNITO_MAX_ID_INCLUSIVE": "4294967294",
      "USER_POOL_ID": {
       "Fn::GetAtt": [
        "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
        "Item.value.S"
       ]
      },
      "CLUSTER_NAME": {
       "Ref": "EnvironmentName"
      },
      "HTTP_PROXY": {
       "Ref": "HttpProxy"
      },
      "HTTPS_PROXY": {
       "Ref": "HttpsProxy"
      },
      "NO_PROXY": {
       "Ref": "NoProxy"
      }
     }
    },
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_uid_cognito-trigger-workflow-lambda"
      ]
     ]
    },
    "Handler": "cognito_trigger_workflow_uid_handler.handle_event",
    "ReservedConcurrentExecutions": 1,
    "Role": {
     "Fn::GetAtt": [
      "InstallercognitotriggerworkflowuidlambdaroleB379713F",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowuidlambdaroleDefaultPolicy25239190",
    "InstallercognitotriggerworkflowuidlambdaroleB379713F",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/generate-uid/Resource",
    "aws:asset:path": "asset.de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallercognitotriggerworkflowgenerateuidSqsEventSourceResearchAndEngineeringStudioInstallercognitopostauthsqsqueueD57FBED7CE55DBB6": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 10,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "Installercognitopostauthsqsqueue2F2D9A3B",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "Installercognitotriggerworkflowgenerateuid9E7424E3"
    },
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/generate-uid/SqsEventSource:ResearchAndEngineeringStudioInstallercognitopostauthsqsqueueD57FBED7/Resource"
   }
  },
  "InstallercognitotriggerworkflowvpcconfiguidlambdaECCF49E0": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "Installercognitotriggerworkflowgenerateuid9E7424E3"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGroupuid5C887C1F",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "Installercognitotriggerworkflowgenerateuid9E7424E3"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "Installercognitotriggerworkflowgenerateuid9E7424E3"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGroupuid5C887C1F",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "Installercognitotriggerworkflowgenerateuid9E7424E3"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installercognitotriggerworkflowgenerateuid9E7424E3",
    "InstallercognitotriggerworkflowgenerateuidSqsEventSourceResearchAndEngineeringStudioInstallercognitopostauthsqsqueueD57FBED7CE55DBB6",
    "InstallercognitotriggerworkflowvpcconfiguidlambdaCustomResourcePolicyA4D3E0EB",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/vpc-config-uid-lambda/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowvpcconfiguidlambdaCustomResourcePolicyA4D3E0EB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowvpcconfiguidlambdaCustomResourcePolicyA4D3E0EB",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "Installercognitotriggerworkflowgenerateuid9E7424E3",
    "InstallercognitotriggerworkflowgenerateuidSqsEventSourceResearchAndEngineeringStudioInstallercognitopostauthsqsqueueD57FBED7CE55DBB6",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/vpc-config-uid-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitotriggerworkflowremovevpcvpcconfiguidlambdaF8299180": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "Installercognitotriggerworkflowgenerateuid9E7424E3"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[],\"SecurityGroupIds\":[]}},\"physicalResourceId\":{\"id\":\"remove-vpc",
       {
        "Ref": "Installercognitotriggerworkflowgenerateuid9E7424E3"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "Installercognitotriggerworkflowgenerateuid9E7424E3",
    "InstallercognitotriggerworkflowgenerateuidSqsEventSourceResearchAndEngineeringStudioInstallercognitopostauthsqsqueueD57FBED7CE55DBB6",
    "InstallercognitotriggerworkflowremovevpcvpcconfiguidlambdaCustomResourcePolicy9471AE32",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/remove-vpc-vpc-config-uid-lambda/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowremovevpcvpcconfiguidlambdaCustomResourcePolicy9471AE32": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowremovevpcvpcconfiguidlambdaCustomResourcePolicy9471AE32",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "Installercognitotriggerworkflowgenerateuid9E7424E3",
    "InstallercognitotriggerworkflowgenerateuidSqsEventSourceResearchAndEngineeringStudioInstallercognitopostauthsqsqueueD57FBED7CE55DBB6",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/remove-vpc-vpc-config-uid-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitotriggerworkflowRemoveIngressRuleOnALBpostauthFEEEBBFD": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"revokeSecurityGroupIngress\",\"service\":\"EC2\",\"parameters\":{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGrouppostauth637813B9",
         "GroupId"
        ]
       },
       "\",\"IpPermissions\":[{\"IpProtocol\":\"tcp\",\"FromPort\":443,\"ToPort\":443,\"UserIdGroupPairs\":[{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancer09B00C0A",
         "Item.value.S"
        ]
       },
       "\"}]}]},\"physicalResourceId\":{\"id\":\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGrouppostauth637813B9",
         "GroupId"
        ]
       },
       "-specific-ingress-removal\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowRemoveIngressRuleOnALBpostauthCustomResourcePolicyA8399A42",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/RemoveIngressRuleOnALBpostauth/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowRemoveIngressRuleOnALBpostauthCustomResourcePolicyA8399A42": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:RevokeSecurityGroupIngress",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowRemoveIngressRuleOnALBpostauthCustomResourcePolicyA8399A42",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/RemoveIngressRuleOnALBpostauth/CustomResourcePolicy/Resource"
   }
  },
  "InstallercognitotriggerworkflowRemoveIngressRuleOnALBuid64BF001D": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"revokeSecurityGroupIngress\",\"service\":\"EC2\",\"parameters\":{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGroupuid5C887C1F",
         "GroupId"
        ]
       },
       "\",\"IpPermissions\":[{\"IpProtocol\":\"tcp\",\"FromPort\":443,\"ToPort\":443,\"UserIdGroupPairs\":[{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "Installercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancer09B00C0A",
         "Item.value.S"
        ]
       },
       "\"}]}]},\"physicalResourceId\":{\"id\":\"",
       {
        "Fn::GetAtt": [
         "InstallercognitotriggerworkflowLambdaSecurityGroupuid5C887C1F",
         "GroupId"
        ]
       },
       "-specific-ingress-removal\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallercognitotriggerworkflowRemoveIngressRuleOnALBuidCustomResourcePolicy595C72A3",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/RemoveIngressRuleOnALBuid/Resource/Default"
   }
  },
  "InstallercognitotriggerworkflowRemoveIngressRuleOnALBuidCustomResourcePolicy595C72A3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:RevokeSecurityGroupIngress",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallercognitotriggerworkflowRemoveIngressRuleOnALBuidCustomResourcePolicy595C72A3",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-trigger-workflow/RemoveIngressRuleOnALBuid/CustomResourcePolicy/Resource"
   }
  },
  "Installercognitopostauthsqsqueuedlq9483F398": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "ContentBasedDeduplication": true,
    "FifoQueue": true,
    "KmsMasterKeyId": "alias/aws/sqs",
    "QueueName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-cognito-post-auth-dlq.fifo"
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-post-auth-sqs-queue-dlq/Resource"
   }
  },
  "Installercognitopostauthsqsqueue2F2D9A3B": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "ContentBasedDeduplication": true,
    "FifoQueue": true,
    "KmsMasterKeyId": "alias/aws/sqs",
    "QueueName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "-cognito-post-auth.fifo"
      ]
     ]
    },
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "Installercognitopostauthsqsqueuedlq9483F398",
       "Arn"
      ]
     },
     "maxReceiveCount": 2
    },
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/cognito-post-auth-sqs-queue/Resource"
   }
  },
  "InstallerAWSProxygetClusterSettingidentityprovidercognitodomainurl8B77BB11": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.domain_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.domain_url\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.domain_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.domain_url\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxygetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicy88CBDE91",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-identity-provider.cognito.domain_url/Resource/Default"
   }
  },
  "InstallerAWSProxygetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicy88CBDE91": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxygetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicy88CBDE91",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-identity-provider.cognito.domain_url/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurl9B1EE150": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.provider_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.provider_url\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.provider_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.provider_url\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy9DC14D5A",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-identity-provider.cognito.provider_url/Resource/Default"
   }
  },
  "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy9DC14D5A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy9DC14D5A",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-identity-provider.cognito.provider_url/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxygetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnBF8F6578": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxygetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy17CCE7A1",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.load_balancers.external_alb.https_listener_arn/Resource/Default"
   }
  },
  "InstallerAWSProxygetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy17CCE7A1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxygetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy17CCE7A1",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.load_balancers.external_alb.https_listener_arn/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxygetClusterSettingclusterclusterendpointslambdaarn21448ACF": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.cluster_endpoints_lambda_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.cluster_endpoints_lambda_arn\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.cluster_endpoints_lambda_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.cluster_endpoints_lambda_arn\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxygetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy65C9A0D9",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.cluster_endpoints_lambda_arn/Resource/Default"
   }
  },
  "InstallerAWSProxygetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy65C9A0D9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxygetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy65C9A0D9",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.cluster_endpoints_lambda_arn/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerADF88712": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicyABF123C4",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.network.security_groups.external-load-balancer/Resource/Default"
   }
  },
  "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicyABF123C4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicyABF123C4",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.network.security_groups.external-load-balancer/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxygetClusterSettingclusternetworkvpcidB46C9116": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxygetClusterSettingclusternetworkvpcidCustomResourcePolicyB3472BFD",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.network.vpc_id/Resource/Default"
   }
  },
  "InstallerAWSProxygetClusterSettingclusternetworkvpcidCustomResourcePolicyB3472BFD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxygetClusterSettingclusternetworkvpcidCustomResourcePolicyB3472BFD",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.network.vpc_id/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsBDC0BD46": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicy93C84DC0",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.network.private_subnets/Resource/Default"
   }
  },
  "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicy93C84DC0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicy93C84DC0",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/getClusterSetting-cluster.network.private_subnets/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxyLambdaExecutionRoleA9B9424B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/LambdaExecutionRole/Resource"
   }
  },
  "InstallerAWSProxyLambdaExecutionRoleDefaultPolicyC8AFC6AE": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/",
           {
            "Ref": "EnvironmentName"
           },
           ".accounts.users"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":table/",
           {
            "Ref": "EnvironmentName"
           },
           ".cluster-settings"
          ]
         ]
        }
       ]
      },
      {
       "Action": "dynamodb:Scan",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".accounts.groups"
         ]
        ]
       }
      },
      {
       "Action": "cognito-idp:DescribeUserPoolClient",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cognito-idp:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::GetAtt": [
            "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurl9B1EE150",
            "Item.value.S"
           ]
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxyLambdaExecutionRoleDefaultPolicyC8AFC6AE",
    "Roles": [
     {
      "Ref": "InstallerAWSProxyLambdaExecutionRoleA9B9424B"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "InstallerAWSProxyProxyLambdaAssumeRoleF3FE2653": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "InstallerAWSProxyLambdaExecutionRoleA9B9424B",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/ProxyLambdaAssumeRole/Resource"
   }
  },
  "InstallerAWSProxyProxyLambdaAssumeRoleDefaultPolicyB06906B1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "budgets:ViewBudget",
        "ec2:DescribeInstances",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeMountTargets",
        "fsx:DescribeFileSystems",
        "fsx:DescribeStorageVirtualMachines",
        "fsx:DescribeVolumes"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxyProxyLambdaAssumeRoleDefaultPolicyB06906B1",
    "Roles": [
     {
      "Ref": "InstallerAWSProxyProxyLambdaAssumeRoleF3FE2653"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/ProxyLambdaAssumeRole/DefaultPolicy/Resource"
   }
  },
  "InstallerAWSProxyproxyLambda9175808B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f.zip"
    },
    "Description": "Lambda to act as AWS API Proxy",
    "Environment": {
     "Variables": {
      "COGNITO_USER_POOL_PROVIDER_URL": {
       "Fn::GetAtt": [
        "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurl9B1EE150",
        "Item.value.S"
       ]
      },
      "COGNITO_USER_POOL_DOMAIN_URL": {
       "Fn::GetAtt": [
        "InstallerAWSProxygetClusterSettingidentityprovidercognitodomainurl8B77BB11",
        "Item.value.S"
       ]
      },
      "DDB_USERS_TABLE_NAME": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "EnvironmentName"
         },
         ".accounts.users"
        ]
       ]
      },
      "DDB_GROUPS_TABLE_NAME": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "EnvironmentName"
         },
         ".accounts.groups"
        ]
       ]
      },
      "DDB_CLUSTER_SETTINGS_TABLE_NAME": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "EnvironmentName"
         },
         ".cluster-settings"
        ]
       ]
      },
      "ASSUME_ROLE_ARN": {
       "Fn::GetAtt": [
        "InstallerAWSProxyProxyLambdaAssumeRoleF3FE2653",
        "Arn"
       ]
      },
      "HTTP_PROXY": {
       "Ref": "HttpProxy"
      },
      "HTTPS_PROXY": {
       "Ref": "HttpsProxy"
      },
      "NO_PROXY": {
       "Ref": "NoProxy"
      }
     }
    },
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_aws-api-proxy-lambda"
      ]
     ]
    },
    "Handler": "proxy_handler.handle_proxy_event",
    "Layers": [
     {
      "Ref": "ApiProxyDepsLayerDC43D796"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "InstallerAWSProxyLambdaExecutionRoleA9B9424B",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "InstallerAWSProxyLambdaExecutionRoleDefaultPolicyC8AFC6AE",
    "InstallerAWSProxyLambdaExecutionRoleA9B9424B",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/proxyLambda/Resource",
    "aws:asset:path": "asset.de8dc4cdd123f9a546c78dfa2a7a5633f267769e131c7f81247e35dd8227ce1f",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallerAWSProxyproxyLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY2A93D3D7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InstallerAWSProxyproxyLambda9175808B",
      "Arn"
     ]
    },
    "Principal": "elasticloadbalancing.amazonaws.com"
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/proxyLambda/Invoke2UTWxhlfyqbT5FTn--5jvgbLgj+FfJwzswGk55DU1H--Y="
   }
  },
  "InstallerAWSProxyproxyLambdaAllowInvocationFromALBTargetGroup42B6188D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InstallerAWSProxyproxyLambda9175808B",
      "Arn"
     ]
    },
    "Principal": "elasticloadbalancing.amazonaws.com",
    "SourceArn": {
     "Ref": "InstallerAWSProxyproxyTargetGroup5A38DE1A"
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/proxyLambda/AllowInvocationFromALBTargetGroup"
   }
  },
  "InstallerAWSProxyProxyLambdaSecurityGroupEF7BBAE0": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for Proxy Lambda",
    "GroupName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_proxy-lambda-security-group-id"
      ]
     ]
    },
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 53,
      "IpProtocol": "udp",
      "ToPort": 53
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 1024,
      "IpProtocol": "tcp",
      "ToPort": 65535
     }
    ],
    "SecurityGroupIngress": [
     {
      "FromPort": 443,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerADF88712",
        "Item.value.S"
       ]
      },
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "InstallerAWSProxygetClusterSettingclusternetworkvpcidB46C9116",
      "Item.value.S"
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/ProxyLambdaSecurityGroup"
   }
  },
  "InstallerAWSProxyaddvpcconfigtolambdaAFC58657": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallerAWSProxyproxyLambda9175808B"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsBDC0BD46",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsBDC0BD46",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxyProxyLambdaSecurityGroupEF7BBAE0",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "InstallerAWSProxyproxyLambda9175808B"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallerAWSProxyproxyLambda9175808B"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsBDC0BD46",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsBDC0BD46",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxyProxyLambdaSecurityGroupEF7BBAE0",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "InstallerAWSProxyproxyLambda9175808B"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxyaddvpcconfigtolambdaCustomResourcePolicyBBB4712C",
    "InstallerAWSProxyproxyLambdaAllowInvocationFromALBTargetGroup42B6188D",
    "InstallerAWSProxyproxyLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY2A93D3D7",
    "InstallerAWSProxyproxyLambda9175808B",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallerAWSProxyaddvpcconfigtolambdaCustomResourcePolicyBBB4712C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxyaddvpcconfigtolambdaCustomResourcePolicyBBB4712C",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerAWSProxyproxyLambdaAllowInvocationFromALBTargetGroup42B6188D",
    "InstallerAWSProxyproxyLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY2A93D3D7",
    "InstallerAWSProxyproxyLambda9175808B",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxyremovevpcaddvpcconfigtolambda3A2B3F1E": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallerAWSProxyproxyLambda9175808B"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[],\"SecurityGroupIds\":[]}},\"physicalResourceId\":{\"id\":\"remove-vpc",
       {
        "Ref": "InstallerAWSProxyproxyLambda9175808B"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxyproxyLambdaAllowInvocationFromALBTargetGroup42B6188D",
    "InstallerAWSProxyproxyLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY2A93D3D7",
    "InstallerAWSProxyproxyLambda9175808B",
    "InstallerAWSProxyremovevpcaddvpcconfigtolambdaCustomResourcePolicy4FC937B1",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/remove-vpc-add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallerAWSProxyremovevpcaddvpcconfigtolambdaCustomResourcePolicy4FC937B1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxyremovevpcaddvpcconfigtolambdaCustomResourcePolicy4FC937B1",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerAWSProxyproxyLambdaAllowInvocationFromALBTargetGroup42B6188D",
    "InstallerAWSProxyproxyLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY2A93D3D7",
    "InstallerAWSProxyproxyLambda9175808B",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/remove-vpc-add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxyRemoveIngressRuleOnALB104E3D71": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"revokeSecurityGroupIngress\",\"service\":\"EC2\",\"parameters\":{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxyProxyLambdaSecurityGroupEF7BBAE0",
         "GroupId"
        ]
       },
       "\",\"IpPermissions\":[{\"IpProtocol\":\"tcp\",\"FromPort\":443,\"ToPort\":443,\"UserIdGroupPairs\":[{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerADF88712",
         "Item.value.S"
        ]
       },
       "\"}]}]},\"physicalResourceId\":{\"id\":\"",
       {
        "Fn::GetAtt": [
         "InstallerAWSProxyProxyLambdaSecurityGroupEF7BBAE0",
         "GroupId"
        ]
       },
       "-specific-ingress-removal\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerAWSProxyRemoveIngressRuleOnALBCustomResourcePolicyF00BF610",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/RemoveIngressRuleOnALB/Resource/Default"
   }
  },
  "InstallerAWSProxyRemoveIngressRuleOnALBCustomResourcePolicyF00BF610": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:RevokeSecurityGroupIngress",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerAWSProxyRemoveIngressRuleOnALBCustomResourcePolicyF00BF610",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/RemoveIngressRuleOnALB/CustomResourcePolicy/Resource"
   }
  },
  "InstallerAWSProxyproxyTargetGroup5A38DE1A": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "TargetType": "lambda",
    "Targets": [
     {
      "Id": {
       "Fn::GetAtt": [
        "InstallerAWSProxyproxyLambda9175808B",
        "Arn"
       ]
      }
     }
    ]
   },
   "DependsOn": [
    "InstallerAWSProxyproxyLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY2A93D3D7",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/proxyTargetGroup/Resource"
   }
  },
  "InstallerAWSProxyawsproxyclientendpoint41C45584": {
   "Type": "Custom::AWSAPIProxyEndpointInternal",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "InstallerAWSProxygetClusterSettingclusterclusterendpointslambdaarn21448ACF",
      "Item.value.S"
     ]
    },
    "endpoint_name": "aws-proxy-client-endpoint",
    "listener_arn": {
     "Fn::GetAtt": [
      "InstallerAWSProxygetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnBF8F6578",
      "Item.value.S"
     ]
    },
    "priority": 101,
    "conditions": [
     {
      "Field": "path-pattern",
      "PathPatternConfig": {
       "Values": [
        "/awsproxy/*"
       ]
      }
     }
    ],
    "actions": [
     {
      "Type": "forward",
      "TargetGroupArn": {
       "Ref": "InstallerAWSProxyproxyTargetGroup5A38DE1A"
      }
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/AWSProxy/aws-proxy-client-endpoint/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingidentityprovidercognitodomainurl0B8BD40B": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.domain_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.domain_url\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.domain_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.domain_url\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdagetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicyFB522F06",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-identity-provider.cognito.domain_url/Resource/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicyFB522F06": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdagetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicyFB522F06",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-identity-provider.cognito.domain_url/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurl05868028": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.provider_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.provider_url\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"identity-provider.cognito.provider_url\"}}},\"physicalResourceId\":{\"id\":\"identity-provider.cognito.provider_url\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy17F849C4",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-identity-provider.cognito.provider_url/Resource/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy17F849C4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy17F849C4",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-identity-provider.cognito.provider_url/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnEB058DEB": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.load_balancers.external_alb.https_listener_arn\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdagetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy3C051C06",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.load_balancers.external_alb.https_listener_arn/Resource/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy3C051C06": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdagetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy3C051C06",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.load_balancers.external_alb.https_listener_arn/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusterclusterendpointslambdaarn85CF7703": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.cluster_endpoints_lambda_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.cluster_endpoints_lambda_arn\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.cluster_endpoints_lambda_arn\"}}},\"physicalResourceId\":{\"id\":\"cluster.cluster_endpoints_lambda_arn\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdagetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy3A8C689A",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.cluster_endpoints_lambda_arn/Resource/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy3A8C689A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdagetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy3A8C689A",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.cluster_endpoints_lambda_arn/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerF1D169E2": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.security_groups.external-load-balancer\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.security_groups.external-load-balancer\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy852F9054",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.network.security_groups.external-load-balancer/Resource/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy852F9054": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy852F9054",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.network.security_groups.external-load-balancer/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusternetworkvpcid782C38EB": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.vpc_id\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.vpc_id\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdagetClusterSettingclusternetworkvpcidCustomResourcePolicy7F3E4914",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.network.vpc_id/Resource/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusternetworkvpcidCustomResourcePolicy7F3E4914": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdagetClusterSettingclusternetworkvpcidCustomResourcePolicy7F3E4914",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.network.vpc_id/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnets97689394": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"GetItem\",\"service\":\"dynamodb\",\"parameters\":{\"TableName\":\"",
       {
        "Ref": "EnvironmentName"
       },
       ".cluster-settings\",\"Key\":{\"key\":{\"S\":\"cluster.network.private_subnets\"}}},\"physicalResourceId\":{\"id\":\"cluster.network.private_subnets\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicyFF8A6C6F",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.network.private_subnets/Resource/Default"
   }
  },
  "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicyFF8A6C6F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "dynamodb:GetItem",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".cluster-settings"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicyFF8A6C6F",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/getClusterSetting-cluster.network.private_subnets/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdaLambdaExecutionRole8F79B027": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/LambdaExecutionRole/Resource"
   }
  },
  "InstallerBackendLambdaLambdaExecutionRoleDefaultPolicyF8C9E64A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:DeleteItem",
        "dynamodb:GetItem",
        "dynamodb:PutItem",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".*"
         ]
        ]
       }
      },
      {
       "Action": "cognito-idp:DescribeUserPoolClient",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cognito-idp:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/",
          {
           "Fn::GetAtt": [
            "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurl05868028",
            "Item.value.S"
           ]
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "ec2:CreateTags",
        "ec2:MonitorInstances",
        "ec2:RunInstances",
        "ec2:TerminateInstances"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":ec2:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":*/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":ec2:",
           {
            "Ref": "AWS::Region"
           },
           "::image/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ec2:DescribeInstanceStatus",
        "ec2:DescribeInstances"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ssm:GetCommandInvocation",
        "ssm:SendCommand"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":ec2:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":instance/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":ssm:",
           {
            "Ref": "AWS::Region"
           },
           "::document/AWS-RunShellScript"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "route53:ChangeResourceRecordSets",
        "route53:GetHostedZone"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":route53:::hostedzone/*"
         ]
        ]
       }
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::",
          {
           "Ref": "AWS::AccountId"
          },
          ":role/",
          {
           "Ref": "EnvironmentName"
          },
          "-bastion-host-role-",
          {
           "Ref": "AWS::Region"
          }
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdaLambdaExecutionRoleDefaultPolicyF8C9E64A",
    "Roles": [
     {
      "Ref": "InstallerBackendLambdaLambdaExecutionRole8F79B027"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/LambdaExecutionRole/DefaultPolicy/Resource"
   }
  },
  "InstallerBackendLambdabackendLambda95AFC7DA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/d0ae05ed5ad2107c319286a2de1a131031c8869bf780dd1df953870e38f54fc7.zip"
    },
    "Description": "RES Backend Lambda",
    "Environment": {
     "Variables": {
      "COGNITO_USER_POOL_PROVIDER_URL": {
       "Fn::GetAtt": [
        "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurl05868028",
        "Item.value.S"
       ]
      },
      "COGNITO_USER_POOL_DOMAIN_URL": {
       "Fn::GetAtt": [
        "InstallerBackendLambdagetClusterSettingidentityprovidercognitodomainurl0B8BD40B",
        "Item.value.S"
       ]
      },
      "environment_name": {
       "Ref": "EnvironmentName"
      },
      "version": "2024.12",
      "aws_region": {
       "Ref": "AWS::Region"
      },
      "HTTP_PROXY": {
       "Ref": "HttpProxy"
      },
      "HTTPS_PROXY": {
       "Ref": "HttpsProxy"
      },
      "NO_PROXY": {
       "Ref": "NoProxy"
      }
     }
    },
    "FunctionName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_backend-lambda"
      ]
     ]
    },
    "Handler": "handler.handle_backend_event",
    "Layers": [
     {
      "Ref": "RESlibrary22ADD963"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "InstallerBackendLambdaLambdaExecutionRole8F79B027",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 30
   },
   "DependsOn": [
    "InstallerBackendLambdaLambdaExecutionRoleDefaultPolicyF8C9E64A",
    "InstallerBackendLambdaLambdaExecutionRole8F79B027",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/backendLambda/Resource",
    "aws:asset:path": "asset.d0ae05ed5ad2107c319286a2de1a131031c8869bf780dd1df953870e38f54fc7",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallerBackendLambdabackendLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY50E54A2E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InstallerBackendLambdabackendLambda95AFC7DA",
      "Arn"
     ]
    },
    "Principal": "elasticloadbalancing.amazonaws.com"
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/backendLambda/Invoke2UTWxhlfyqbT5FTn--5jvgbLgj+FfJwzswGk55DU1H--Y="
   }
  },
  "InstallerBackendLambdabackendLambdaAllowInvocationFromALBTargetGroupEA4B36DD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "InstallerBackendLambdabackendLambda95AFC7DA",
      "Arn"
     ]
    },
    "Principal": "elasticloadbalancing.amazonaws.com",
    "SourceArn": {
     "Ref": "InstallerBackendLambdabackendTargetGroup3801C211"
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/backendLambda/AllowInvocationFromALBTargetGroup"
   }
  },
  "InstallerBackendLambdaLambdaSecurityGroupbackendFC3143A1": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Lambda security group",
    "GroupName": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "_backend-lambda-security-group-name"
      ]
     ]
    },
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 53,
      "IpProtocol": "udp",
      "ToPort": 53
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": 1024,
      "IpProtocol": "tcp",
      "ToPort": 65535
     }
    ],
    "SecurityGroupIngress": [
     {
      "FromPort": 443,
      "IpProtocol": "tcp",
      "SourceSecurityGroupId": {
       "Fn::GetAtt": [
        "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerF1D169E2",
        "Item.value.S"
       ]
      },
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Fn::GetAtt": [
      "InstallerBackendLambdagetClusterSettingclusternetworkvpcid782C38EB",
      "Item.value.S"
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/LambdaSecurityGroupbackend"
   }
  },
  "InstallerBackendLambdaaddvpcconfigtolambda430186F1": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Create": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallerBackendLambdabackendLambda95AFC7DA"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnets97689394",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnets97689394",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdaLambdaSecurityGroupbackendFC3143A1",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "InstallerBackendLambdabackendLambda95AFC7DA"
       },
       "\"}}"
      ]
     ]
    },
    "Update": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallerBackendLambdabackendLambda95AFC7DA"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnets97689394",
         "Item.value.L.0.S"
        ]
       },
       "\",\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnets97689394",
         "Item.value.L.1.S"
        ]
       },
       "\"],\"SecurityGroupIds\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdaLambdaSecurityGroupbackendFC3143A1",
         "GroupId"
        ]
       },
       "\"]}},\"physicalResourceId\":{\"id\":\"add-vpc-",
       {
        "Ref": "InstallerBackendLambdabackendLambda95AFC7DA"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdaaddvpcconfigtolambdaCustomResourcePolicyF2C3FE72",
    "InstallerBackendLambdabackendLambdaAllowInvocationFromALBTargetGroupEA4B36DD",
    "InstallerBackendLambdabackendLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY50E54A2E",
    "InstallerBackendLambdabackendLambda95AFC7DA",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallerBackendLambdaaddvpcconfigtolambdaCustomResourcePolicyF2C3FE72": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdaaddvpcconfigtolambdaCustomResourcePolicyF2C3FE72",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerBackendLambdabackendLambdaAllowInvocationFromALBTargetGroupEA4B36DD",
    "InstallerBackendLambdabackendLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY50E54A2E",
    "InstallerBackendLambdabackendLambda95AFC7DA",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdaremovevpcaddvpcconfigtolambda98E09A3B": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"UpdateFunctionConfigurationCommand\",\"service\":\"@aws-sdk/client-lambda\",\"parameters\":{\"FunctionName\":\"",
       {
        "Ref": "InstallerBackendLambdabackendLambda95AFC7DA"
       },
       "\",\"VpcConfig\":{\"SubnetIds\":[],\"SecurityGroupIds\":[]}},\"physicalResourceId\":{\"id\":\"remove-vpc",
       {
        "Ref": "InstallerBackendLambdabackendLambda95AFC7DA"
       },
       "\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdabackendLambdaAllowInvocationFromALBTargetGroupEA4B36DD",
    "InstallerBackendLambdabackendLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY50E54A2E",
    "InstallerBackendLambdabackendLambda95AFC7DA",
    "InstallerBackendLambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy12EF83F6",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/remove-vpc-add-vpc-config-to-lambda/Resource/Default"
   }
  },
  "InstallerBackendLambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy12EF83F6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "lambda:UpdateFunctionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy12EF83F6",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerBackendLambdabackendLambdaAllowInvocationFromALBTargetGroupEA4B36DD",
    "InstallerBackendLambdabackendLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY50E54A2E",
    "InstallerBackendLambdabackendLambda95AFC7DA",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/remove-vpc-add-vpc-config-to-lambda/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdaRemoveIngressRuleOnALB951E3374": {
   "Type": "Custom::AWS",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
      "Arn"
     ]
    },
    "Delete": {
     "Fn::Join": [
      "",
      [
       "{\"action\":\"revokeSecurityGroupIngress\",\"service\":\"EC2\",\"parameters\":{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdaLambdaSecurityGroupbackendFC3143A1",
         "GroupId"
        ]
       },
       "\",\"IpPermissions\":[{\"IpProtocol\":\"tcp\",\"FromPort\":443,\"ToPort\":443,\"UserIdGroupPairs\":[{\"GroupId\":\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerF1D169E2",
         "Item.value.S"
        ]
       },
       "\"}]}]},\"physicalResourceId\":{\"id\":\"",
       {
        "Fn::GetAtt": [
         "InstallerBackendLambdaLambdaSecurityGroupbackendFC3143A1",
         "GroupId"
        ]
       },
       "-specific-ingress-removal\"}}"
      ]
     ]
    },
    "InstallLatestAwsSdk": false
   },
   "DependsOn": [
    "InstallerBackendLambdaRemoveIngressRuleOnALBCustomResourcePolicyEF9D56F8",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/RemoveIngressRuleOnALB/Resource/Default"
   }
  },
  "InstallerBackendLambdaRemoveIngressRuleOnALBCustomResourcePolicyEF9D56F8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "ec2:RevokeSecurityGroupIngress",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerBackendLambdaRemoveIngressRuleOnALBCustomResourcePolicyEF9D56F8",
    "Roles": [
     {
      "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/RemoveIngressRuleOnALB/CustomResourcePolicy/Resource"
   }
  },
  "InstallerBackendLambdabackendTargetGroup3801C211": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "TargetType": "lambda",
    "Targets": [
     {
      "Id": {
       "Fn::GetAtt": [
        "InstallerBackendLambdabackendLambda95AFC7DA",
        "Arn"
       ]
      }
     }
    ]
   },
   "DependsOn": [
    "InstallerBackendLambdabackendLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY50E54A2E",
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/backendTargetGroup/Resource"
   }
  },
  "InstallerBackendLambdaawsbackendclientendpointBF4B0F1B": {
   "Type": "Custom::BackendLambdaEndpointInternal",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "InstallerBackendLambdagetClusterSettingclusterclusterendpointslambdaarn85CF7703",
      "Item.value.S"
     ]
    },
    "endpoint_name": "aws-backend-client-endpoint",
    "listener_arn": {
     "Fn::GetAtt": [
      "InstallerBackendLambdagetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnEB058DEB",
      "Item.value.S"
     ]
    },
    "priority": 102,
    "conditions": [
     {
      "Field": "path-pattern",
      "PathPatternConfig": {
       "Values": [
        "/res/*"
       ]
      }
     }
    ],
    "actions": [
     {
      "Type": "forward",
      "TargetGroupArn": {
       "Ref": "InstallerBackendLambdabackendTargetGroup3801C211"
      }
     }
    ]
   },
   "DependsOn": [
    "InstallerInstallerWaitCondition1733953381A3EC23A6"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/BackendLambda/aws-backend-client-endpoint/Default"
   }
  },
  "InstallerTasksClusterA78B7F2B": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/Cluster/Resource"
   }
  },
  "InstallerTasksPermissionsPipelineRoleD0D276F9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":ecs:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":*"
           ]
          ]
         }
        },
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    },
    "RoleName": {
     "Fn::Join": [
      "",
      [
       "Admin-",
       {
        "Ref": "EnvironmentName"
       },
       "-",
       {
        "Ref": "AWS::Region"
       },
       "-PipelineRole"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/Permissions/PipelineRole/Resource"
   }
  },
  "InstallerTasksPermissionsPipelineRoleDefaultPolicy8E41116D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "cloudformation:CreateChangeSet",
        "cloudformation:DescribeChangeSet",
        "cloudformation:DescribeStackEvents",
        "cloudformation:ExecuteChangeSet",
        "cloudformation:UpdateTerminationProtection"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudformation:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":stack/",
          {
           "Ref": "EnvironmentName"
          },
          "-*/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "cloudformation:DescribeStacks",
        "cloudformation:ListStacks",
        "cloudwatch:DescribeAlarms",
        "ec2:DescribeInstances",
        "ec2:DescribeSubnets",
        "ecr:GetAuthorizationToken",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeTargetGroups",
        "lambda:ListFunctions",
        "lambda:ListTags",
        "s3:ListAllMyBuckets",
        "ssm:ListCommandInvocations",
        "sts:GetCallerIdentity"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:DeleteTable",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/",
          {
           "Ref": "EnvironmentName"
          },
          ".*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchGetImage",
        "ecr:DescribeRepositories",
        "ecr:GetDownloadUrlForLayer",
        "ecr:GetLifecyclePolicy",
        "ecr:GetRepositoryPolicy",
        "ecr:ListTagsForResource"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/",
          {
           "Ref": "EnvironmentName"
          },
          "-res-ecr"
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:CreateRepository",
        "ecr:DescribeRepositories",
        "ecr:SetRepositoryPolicy",
        "ecr:TagResource"
       ],
       "Condition": {
        "StringEquals": {
         "aws:ResourceTag/res:EnvironmentName": {
          "Ref": "EnvironmentName"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/cdk-*-container-assets-",
          {
           "Ref": "AWS::AccountId"
          },
          "-",
          {
           "Ref": "AWS::Region"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:BatchGetImage",
        "ecr:GetDownloadUrlForLayer"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":*:repository/aws-guardduty-agent-fargate"
         ]
        ]
       }
      },
      {
       "Action": [
        "iam:AttachRolePolicy",
        "iam:CreateRole",
        "iam:GetRole",
        "iam:GetRolePolicy",
        "iam:ListAttachedRolePolicies",
        "iam:ListRolePolicies",
        "iam:PutRolePolicy",
        "iam:TagRole",
        "sts:AssumeRole"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::",
          {
           "Ref": "AWS::AccountId"
          },
          ":role/cdk-*-role-",
          {
           "Ref": "AWS::AccountId"
          },
          "-",
          {
           "Ref": "AWS::Region"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:CreateBucket",
        "s3:DeleteBucket",
        "s3:DeleteBucketPolicy",
        "s3:GetAccelerateConfiguration",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketAcl",
        "s3:GetBucketCORS",
        "s3:GetBucketLogging",
        "s3:GetBucketNotification",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketOwnershipControls",
        "s3:GetBucketPolicy",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketTagging",
        "s3:GetBucketVersioning",
        "s3:GetBucketWebsite",
        "s3:GetEncryptionConfiguration",
        "s3:GetIntelligentTieringConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetMetricsConfiguration",
        "s3:GetReplicationConfiguration",
        "s3:ListBucketVersions",
        "s3:PutBucketAcl",
        "s3:PutBucketLogging",
        "s3:PutBucketPolicy",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutBucketTagging",
        "s3:PutBucketVersioning",
        "s3:PutEncryptionConfiguration"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Ref": "EnvironmentName"
           },
           "-cluster-",
           {
            "Ref": "AWS::Region"
           },
           "-",
           {
            "Ref": "AWS::AccountId"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::log-",
           {
            "Ref": "EnvironmentName"
           },
           "-cluster-",
           {
            "Ref": "AWS::Region"
           },
           "-",
           {
            "Ref": "AWS::AccountId"
           },
           "-*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObjectVersion",
        "s3:PutObject"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Ref": "EnvironmentName"
           },
           "-cluster-",
           {
            "Ref": "AWS::Region"
           },
           "-",
           {
            "Ref": "AWS::AccountId"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::log-",
           {
            "Ref": "EnvironmentName"
           },
           "-cluster-",
           {
            "Ref": "AWS::Region"
           },
           "-",
           {
            "Ref": "AWS::AccountId"
           },
           "-*/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ssm:AddTagsToResource",
        "ssm:DeleteParameter",
        "ssm:GetParameters",
        "ssm:PutParameter"
       ],
       "Condition": {
        "StringEquals": {
         "aws:ResourceTag/res:EnvironmentName": {
          "Ref": "EnvironmentName"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ssm:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":parameter/cdk-bootstrap/*/version"
         ]
        ]
       }
      },
      {
       "Action": [
        "cloudformation:DeleteStack",
        "cloudformation:UpdateTerminationProtection"
       ],
       "Condition": {
        "StringEquals": {
         "aws:ResourceTag/res:EnvironmentName": {
          "Ref": "EnvironmentName"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudformation:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":stack/",
          {
           "Ref": "EnvironmentName"
          },
          "-*/*"
         ]
        ]
       }
      },
      {
       "Action": "dynamodb:ListTables",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":dynamodb:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":table/*"
         ]
        ]
       }
      },
      {
       "Action": "ecr:DeleteRepository",
       "Condition": {
        "StringEquals": {
         "aws:ResourceTag/res:EnvironmentName": {
          "Ref": "EnvironmentName"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":repository/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ec2:DescribeInstanceAttribute",
        "ec2:TerminateInstances",
        "ssm:SendCommand"
       ],
       "Condition": {
        "StringEquals": {
         "aws:ResourceTag/res:EnvironmentName": {
          "Ref": "EnvironmentName"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ec2:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":instance/*"
         ]
        ]
       }
      },
      {
       "Action": "lambda:UpdateFunctionConfiguration",
       "Condition": {
        "StringEquals": {
         "aws:ResourceTag/res:EnvironmentName": {
          "Ref": "EnvironmentName"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":lambda:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":function:*"
         ]
        ]
       }
      },
      {
       "Action": [
        "iam:DeleteRole",
        "iam:DeleteRolePolicy",
        "iam:DetachRolePolicy",
        "iam:GetRole",
        "iam:ListAttachedRolePolicies",
        "iam:ListRolePolicies"
       ],
       "Condition": {
        "StringEquals": {
         "aws:ResourceTag/res:EnvironmentName": {
          "Ref": "EnvironmentName"
         }
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":iam::",
          {
           "Ref": "AWS::AccountId"
          },
          ":role/cdk-*-role-",
          {
           "Ref": "AWS::AccountId"
          },
          "-",
          {
           "Ref": "AWS::Region"
          }
         ]
        ]
       }
      },
      {
       "Action": "cloudwatch:DeleteAlarms",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cloudwatch:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":alarm:TargetTracking-table/*"
         ]
        ]
       }
      },
      {
       "Action": "ssm:SendCommand",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ssm:",
          {
           "Ref": "AWS::Region"
          },
          "::document/AWS-RunShellScript"
         ]
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "InstallerTasksCreateTaskDefCreateContainerLogGroupB0BB7610",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "InstallerTasksDeleteTaskDefDeleteContainerLogGroup20006B67",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "InstallerTasksUpdateTaskDefUpdateContainerLogGroupF3D746B9",
          "Arn"
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerTasksPermissionsPipelineRoleDefaultPolicy8E41116D",
    "Roles": [
     {
      "Ref": "InstallerTasksPermissionsPipelineRoleD0D276F9"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/Permissions/PipelineRole/DefaultPolicy/Resource"
   }
  },
  "InstallerTasksCreateTaskDef12809FCD": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "/bin/sh",
       "-c",
       {
        "Fn::Join": [
         "",
         [
          "/bin/sh -ex <<'EOC'\nres-admin --version\nres-admin bootstrap --cluster-name ",
          {
           "Ref": "EnvironmentName"
          },
          " --aws-region ",
          {
           "Ref": "AWS::Region"
          },
          "\nres-admin deploy all --cluster-name ",
          {
           "Ref": "EnvironmentName"
          },
          " --aws-region ",
          {
           "Ref": "AWS::Region"
          },
          "\nEOC\n"
         ]
        ]
       }
      ],
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "AWS_DEFAULT_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "IDEA_ADMIN_AWS_CREDENTIAL_PROVIDER",
        "Value": "Ec2InstanceMetadata"
       },
       {
        "Name": "AWS_STS_REGIONAL_ENDPOINTS",
        "Value": "regional"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        ":",
        [
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::Select": [
              4,
              {
               "Fn::Split": [
                ":",
                {
                 "Fn::GetAtt": [
                  "ResEcrRepo6ABD6A23",
                  "Arn"
                 ]
                }
               ]
              }
             ]
            },
            ".dkr.ecr.",
            {
             "Fn::Select": [
              3,
              {
               "Fn::Split": [
                ":",
                {
                 "Fn::GetAtt": [
                  "ResEcrRepo6ABD6A23",
                  "Arn"
                 ]
                }
               ]
              }
             ]
            },
            ".",
            {
             "Ref": "AWS::URLSuffix"
            },
            "/",
            {
             "Ref": "ResEcrRepo6ABD6A23"
            }
           ]
          ]
         },
         "installer-2024.12-3b16f438"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "InstallerTasksCreateTaskDefCreateContainerLogGroupB0BB7610"
        },
        "awslogs-stream-prefix": "CreateLogStream",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "CreateContainer"
     }
    ],
    "Cpu": "2048",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "InstallerTasksPermissionsPipelineRoleD0D276F9",
      "Arn"
     ]
    },
    "Family": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "CreateTaskDef"
      ]
     ]
    },
    "Memory": "4096",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "InstallerTasksPermissionsPipelineRoleD0D276F9",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/CreateTaskDef/Resource"
   }
  },
  "InstallerTasksCreateTaskDefCreateContainerLogGroupB0BB7610": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/CreateTaskDef/CreateContainer/LogGroup/Resource"
   }
  },
  "InstallerTasksCreateSecurityGroup514FFF0D": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ResearchAndEngineeringStudio/Installer/Tasks/Create/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VpcId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/Create/SecurityGroup/Resource"
   }
  },
  "InstallerTasksUpdateTaskDef1EDBDB9C": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "/bin/sh",
       "-c",
       {
        "Fn::Join": [
         "",
         [
          "/bin/sh -ex <<'EOC'\nres-admin --version\nres-admin deploy all --upgrade --cluster-name ",
          {
           "Ref": "EnvironmentName"
          },
          " --aws-region ",
          {
           "Ref": "AWS::Region"
          },
          "\nEOC\n"
         ]
        ]
       }
      ],
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "AWS_DEFAULT_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "IDEA_ADMIN_AWS_CREDENTIAL_PROVIDER",
        "Value": "Ec2InstanceMetadata"
       },
       {
        "Name": "AWS_STS_REGIONAL_ENDPOINTS",
        "Value": "regional"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        ":",
        [
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::Select": [
              4,
              {
               "Fn::Split": [
                ":",
                {
                 "Fn::GetAtt": [
                  "ResEcrRepo6ABD6A23",
                  "Arn"
                 ]
                }
               ]
              }
             ]
            },
            ".dkr.ecr.",
            {
             "Fn::Select": [
              3,
              {
               "Fn::Split": [
                ":",
                {
                 "Fn::GetAtt": [
                  "ResEcrRepo6ABD6A23",
                  "Arn"
                 ]
                }
               ]
              }
             ]
            },
            ".",
            {
             "Ref": "AWS::URLSuffix"
            },
            "/",
            {
             "Ref": "ResEcrRepo6ABD6A23"
            }
           ]
          ]
         },
         "installer-2024.12-3b16f438"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "InstallerTasksUpdateTaskDefUpdateContainerLogGroupF3D746B9"
        },
        "awslogs-stream-prefix": "UpdateLogStream",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "UpdateContainer"
     }
    ],
    "Cpu": "2048",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "InstallerTasksPermissionsPipelineRoleD0D276F9",
      "Arn"
     ]
    },
    "Family": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "UpdateTaskDef"
      ]
     ]
    },
    "Memory": "4096",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "InstallerTasksPermissionsPipelineRoleD0D276F9",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/UpdateTaskDef/Resource"
   }
  },
  "InstallerTasksUpdateTaskDefUpdateContainerLogGroupF3D746B9": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/UpdateTaskDef/UpdateContainer/LogGroup/Resource"
   }
  },
  "InstallerTasksUpdateSecurityGroup3269C5D9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ResearchAndEngineeringStudio/Installer/Tasks/Update/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VpcId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/Update/SecurityGroup/Resource"
   }
  },
  "InstallerTasksDeleteTaskDefDDA0ECF3": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Command": [
       "/bin/sh",
       "-c",
       {
        "Fn::Join": [
         "",
         [
          "/bin/sh -ex <<'EOC'\nres-admin --version\nres-admin delete-cluster --delete-databases --delete-bootstrap --force --cluster-name ",
          {
           "Ref": "EnvironmentName"
          },
          " --aws-region ",
          {
           "Ref": "AWS::Region"
          },
          "\nEOC\n"
         ]
        ]
       }
      ],
      "Environment": [
       {
        "Name": "AWS_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "AWS_DEFAULT_REGION",
        "Value": {
         "Ref": "AWS::Region"
        }
       },
       {
        "Name": "IDEA_ADMIN_AWS_CREDENTIAL_PROVIDER",
        "Value": "Ec2InstanceMetadata"
       },
       {
        "Name": "AWS_STS_REGIONAL_ENDPOINTS",
        "Value": "regional"
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Join": [
        ":",
        [
         {
          "Fn::Join": [
           "",
           [
            {
             "Fn::Select": [
              4,
              {
               "Fn::Split": [
                ":",
                {
                 "Fn::GetAtt": [
                  "ResEcrRepo6ABD6A23",
                  "Arn"
                 ]
                }
               ]
              }
             ]
            },
            ".dkr.ecr.",
            {
             "Fn::Select": [
              3,
              {
               "Fn::Split": [
                ":",
                {
                 "Fn::GetAtt": [
                  "ResEcrRepo6ABD6A23",
                  "Arn"
                 ]
                }
               ]
              }
             ]
            },
            ".",
            {
             "Ref": "AWS::URLSuffix"
            },
            "/",
            {
             "Ref": "ResEcrRepo6ABD6A23"
            }
           ]
          ]
         },
         "installer-2024.12-3b16f438"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "InstallerTasksDeleteTaskDefDeleteContainerLogGroup20006B67"
        },
        "awslogs-stream-prefix": "DeleteLogStream",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "DeleteContainer"
     }
    ],
    "Cpu": "2048",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "InstallerTasksPermissionsPipelineRoleD0D276F9",
      "Arn"
     ]
    },
    "Family": {
     "Fn::Join": [
      "",
      [
       {
        "Ref": "EnvironmentName"
       },
       "DeleteTaskDef"
      ]
     ]
    },
    "Memory": "4096",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "InstallerTasksPermissionsPipelineRoleD0D276F9",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/DeleteTaskDef/Resource"
   }
  },
  "InstallerTasksDeleteTaskDefDeleteContainerLogGroup20006B67": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/DeleteTaskDef/DeleteContainer/LogGroup/Resource"
   }
  },
  "InstallerTasksDeleteSecurityGroupD7708443": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "ResearchAndEngineeringStudio/Installer/Tasks/Delete/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "VpcId"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/Delete/SecurityGroup/Resource"
   }
  },
  "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRole41ADA9B7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/UnprotectCognitoUserPoolLambda/ServiceRole/Resource"
   }
  },
  "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRoleDefaultPolicy171E54D4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cognito-idp:ListUserPools",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "cognito-idp:DescribeUserPool",
        "cognito-idp:UpdateUserPool"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":cognito-idp:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":userpool/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRoleDefaultPolicy171E54D4",
    "Roles": [
     {
      "Ref": "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRole41ADA9B7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/UnprotectCognitoUserPoolLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "InstallerTasksUnprotectCognitoUserPoolLambda9823850B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742.zip"
    },
    "Description": "Lambda to unprotect Cognito user pool",
    "Handler": "installer_handlers.unprotect_cognito_user_pool",
    "Role": {
     "Fn::GetAtt": [
      "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRole41ADA9B7",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 120
   },
   "DependsOn": [
    "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRoleDefaultPolicy171E54D4",
    "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRole41ADA9B7"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/Tasks/UnprotectCognitoUserPoolLambda/Resource",
    "aws:asset:path": "asset.2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallerWaitConditionResponseSenderServiceRoleD3B7C9E9": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/WaitConditionResponseSender/ServiceRole/Resource"
   }
  },
  "InstallerWaitConditionResponseSender7A7BC874": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742.zip"
    },
    "Description": "Lambda to send response using the wait condition callback",
    "Handler": "installer_handlers.send_wait_condition_response",
    "Role": {
     "Fn::GetAtt": [
      "InstallerWaitConditionResponseSenderServiceRoleD3B7C9E9",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "InstallerWaitConditionResponseSenderServiceRoleD3B7C9E9"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/WaitConditionResponseSender/Resource",
    "aws:asset:path": "asset.2741bef550d9de29859ecf5fb9cd78be2a9be1ab9d8b1a77aa738f425bbcf742",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "InstallerInstallerStateMachineRole6DA34EFE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/InstallerStateMachine/Role/Resource"
   }
  },
  "InstallerInstallerStateMachineRoleDefaultPolicyC7A52C7D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "InstallerTasksUnprotectCognitoUserPoolLambda9823850B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "InstallerWaitConditionResponseSender7A7BC874",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "InstallerTasksUnprotectCognitoUserPoolLambda9823850B",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "InstallerWaitConditionResponseSender7A7BC874",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "ecs:RunTask",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksCreateTaskDef12809FCD"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             2,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksCreateTaskDef12809FCD"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             3,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksCreateTaskDef12809FCD"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             4,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksCreateTaskDef12809FCD"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             0,
             {
              "Fn::Split": [
               "/",
               {
                "Fn::Select": [
                 5,
                 {
                  "Fn::Split": [
                   ":",
                   {
                    "Ref": "InstallerTasksCreateTaskDef12809FCD"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           "/",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               "/",
               {
                "Fn::Select": [
                 5,
                 {
                  "Fn::Split": [
                   ":",
                   {
                    "Ref": "InstallerTasksCreateTaskDef12809FCD"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksDeleteTaskDefDDA0ECF3"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             2,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksDeleteTaskDefDDA0ECF3"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             3,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksDeleteTaskDefDDA0ECF3"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             4,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksDeleteTaskDefDDA0ECF3"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             0,
             {
              "Fn::Split": [
               "/",
               {
                "Fn::Select": [
                 5,
                 {
                  "Fn::Split": [
                   ":",
                   {
                    "Ref": "InstallerTasksDeleteTaskDefDDA0ECF3"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           "/",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               "/",
               {
                "Fn::Select": [
                 5,
                 {
                  "Fn::Split": [
                   ":",
                   {
                    "Ref": "InstallerTasksDeleteTaskDefDDA0ECF3"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksUpdateTaskDef1EDBDB9C"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             2,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksUpdateTaskDef1EDBDB9C"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             3,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksUpdateTaskDef1EDBDB9C"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             4,
             {
              "Fn::Split": [
               ":",
               {
                "Ref": "InstallerTasksUpdateTaskDef1EDBDB9C"
               }
              ]
             }
            ]
           },
           ":",
           {
            "Fn::Select": [
             0,
             {
              "Fn::Split": [
               "/",
               {
                "Fn::Select": [
                 5,
                 {
                  "Fn::Split": [
                   ":",
                   {
                    "Ref": "InstallerTasksUpdateTaskDef1EDBDB9C"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           "/",
           {
            "Fn::Select": [
             1,
             {
              "Fn::Split": [
               "/",
               {
                "Fn::Select": [
                 5,
                 {
                  "Fn::Split": [
                   ":",
                   {
                    "Ref": "InstallerTasksUpdateTaskDef1EDBDB9C"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ecs:DescribeTasks",
        "ecs:StopTask"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "InstallerTasksPermissionsPipelineRoleD0D276F9",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "events:DescribeRule",
        "events:PutRule",
        "events:PutTargets"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":events:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":rule/StepFunctionsGetEventsForECSTaskRule"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "InstallerInstallerStateMachineRoleDefaultPolicyC7A52C7D",
    "Roles": [
     {
      "Ref": "InstallerInstallerStateMachineRole6DA34EFE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/InstallerStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "InstallerInstallerStateMachineEAA7045D": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"SwitchByEventType\",\"States\":{\"SwitchByEventType\":{\"Type\":\"Choice\",\"Choices\":[{\"Variable\":\"$.RequestType\",\"StringEquals\":\"Delete\",\"Next\":\"UnprotectCognitoUserPool\"},{\"Variable\":\"$.RequestType\",\"StringEquals\":\"Create\",\"Next\":\"Create\"},{\"Variable\":\"$.RequestType\",\"StringEquals\":\"Update\",\"Next\":\"Update\"}],\"Default\":\"UnknownRequestType\"},\"UnknownRequestType\":{\"Type\":\"Fail\"},\"UnprotectCognitoUserPool\":{\"Next\":\"Delete\",\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.ERROR\",\"Next\":\"SendCfnResponse\"}],\"Type\":\"Task\",\"ResultPath\":\"$.RESULT\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "InstallerTasksUnprotectCognitoUserPoolLambda9823850B",
         "Arn"
        ]
       },
       "\"},\"Delete\":{\"Next\":\"SendCfnResponse\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.ERROR\",\"Next\":\"SendCfnResponse\"}],\"Type\":\"Task\",\"ResultPath\":\"$.RESULT\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "InstallerTasksClusterA78B7F2B",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "DeleteTaskDef\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
       {
        "Fn::Select": [
         0,
         {
          "Ref": "InfrastructureHostSubnets"
         }
        ]
       },
       "\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Ref": "InfrastructureHostSubnets"
         }
        ]
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerTasksDeleteSecurityGroupD7708443",
         "GroupId"
        ]
       },
       "\"]}},\"LaunchType\":\"FARGATE\",\"PlatformVersion\":\"LATEST\"}},\"SendCfnResponse\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2},{\"ErrorEquals\":[\"States.ALL\"]}],\"Type\":\"Task\",\"Resource\":\"",
       {
        "Fn::GetAtt": [
         "InstallerWaitConditionResponseSender7A7BC874",
         "Arn"
        ]
       },
       "\"},\"Create\":{\"Next\":\"SendCfnResponse\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.ERROR\",\"Next\":\"SendCfnResponse\"}],\"Type\":\"Task\",\"ResultPath\":\"$.RESULT\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "InstallerTasksClusterA78B7F2B",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "CreateTaskDef\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
       {
        "Fn::Select": [
         0,
         {
          "Ref": "InfrastructureHostSubnets"
         }
        ]
       },
       "\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Ref": "InfrastructureHostSubnets"
         }
        ]
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerTasksCreateSecurityGroup514FFF0D",
         "GroupId"
        ]
       },
       "\"]}},\"LaunchType\":\"FARGATE\",\"PlatformVersion\":\"LATEST\"}},\"Update\":{\"Next\":\"SendCfnResponse\",\"Catch\":[{\"ErrorEquals\":[\"States.ALL\"],\"ResultPath\":\"$.ERROR\",\"Next\":\"SendCfnResponse\"}],\"Type\":\"Task\",\"ResultPath\":\"$.RESULT\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::ecs:runTask.sync\",\"Parameters\":{\"Cluster\":\"",
       {
        "Fn::GetAtt": [
         "InstallerTasksClusterA78B7F2B",
         "Arn"
        ]
       },
       "\",\"TaskDefinition\":\"",
       {
        "Ref": "EnvironmentName"
       },
       "UpdateTaskDef\",\"NetworkConfiguration\":{\"AwsvpcConfiguration\":{\"Subnets\":[\"",
       {
        "Fn::Select": [
         0,
         {
          "Ref": "InfrastructureHostSubnets"
         }
        ]
       },
       "\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Ref": "InfrastructureHostSubnets"
         }
        ]
       },
       "\"],\"SecurityGroups\":[\"",
       {
        "Fn::GetAtt": [
         "InstallerTasksUpdateSecurityGroup3269C5D9",
         "GroupId"
        ]
       },
       "\"]}},\"LaunchType\":\"FARGATE\",\"PlatformVersion\":\"LATEST\"}}}}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "InstallerInstallerStateMachineRole6DA34EFE",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "InstallerInstallerStateMachineRoleDefaultPolicyC7A52C7D",
    "InstallerInstallerStateMachineRole6DA34EFE"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/Installer/InstallerStateMachine/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "PermissionsBoundary": {
     "Fn::If": [
      "PermissionBoundaryProvided",
      {
       "Ref": "IAMPermissionBoundary"
      },
      {
       "Ref": "AWS::NoValue"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
   }
  },
  "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "research-engineering-studio-${AWS::Region}"
     },
     "S3Key": "releases/2024.12/ce2f3595a340d6c519a65888ef97e3b9b64f053f83608e32cc28162e22d7d99a.zip"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 120
   },
   "DependsOn": [
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
   ],
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/AWS679f53fac002430cb0da5b7982bd2287/Resource",
    "aws:asset:path": "asset.ce2f3595a340d6c519a65888ef97e3b9b64f053f83608e32cc28162e22d7d99a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "resfinalizerNestedStackresfinalizerNestedStackResource87EFD076": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "Parameters": {
     "referencetoResearchAndEngineeringStudioEnvironmentName73279C6BRef": {
      "Ref": "EnvironmentName"
     },
     "referencetoResearchAndEngineeringStudioIAMPermissionBoundaryAE979326Ref": {
      "Ref": "IAMPermissionBoundary"
     },
     "referencetoResearchAndEngineeringStudioRESlibrary7EC20E56Ref": {
      "Ref": "RESlibrary22ADD963"
     }
    },
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.",
       {
        "Ref": "AWS::Region"
       },
       ".",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/",
       {
        "Fn::Sub": "research-engineering-studio-${AWS::Region}"
       },
       "/releases/2024.12/2b38613f28dc95a84a909b127208961a5aeff2d2449df0960aa268823b451a9f"
      ]
     ]
    }
   },
   "DependsOn": [
    "InstallerAWSProxyaddvpcconfigtolambdaCustomResourcePolicyBBB4712C",
    "InstallerAWSProxyaddvpcconfigtolambdaAFC58657",
    "InstallerAWSProxyawsproxyclientendpoint41C45584",
    "InstallerAWSProxygetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy65C9A0D9",
    "InstallerAWSProxygetClusterSettingclusterclusterendpointslambdaarn21448ACF",
    "InstallerAWSProxygetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy17CCE7A1",
    "InstallerAWSProxygetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnBF8F6578",
    "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicy93C84DC0",
    "InstallerAWSProxygetClusterSettingclusternetworkprivatesubnetsBDC0BD46",
    "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicyABF123C4",
    "InstallerAWSProxygetClusterSettingclusternetworksecuritygroupsexternalloadbalancerADF88712",
    "InstallerAWSProxygetClusterSettingclusternetworkvpcidCustomResourcePolicyB3472BFD",
    "InstallerAWSProxygetClusterSettingclusternetworkvpcidB46C9116",
    "InstallerAWSProxygetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicy88CBDE91",
    "InstallerAWSProxygetClusterSettingidentityprovidercognitodomainurl8B77BB11",
    "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy9DC14D5A",
    "InstallerAWSProxygetClusterSettingidentityprovidercognitoproviderurl9B1EE150",
    "InstallerAWSProxyLambdaExecutionRoleDefaultPolicyC8AFC6AE",
    "InstallerAWSProxyLambdaExecutionRoleA9B9424B",
    "InstallerAWSProxyproxyLambdaAllowInvocationFromALBTargetGroup42B6188D",
    "InstallerAWSProxyproxyLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY2A93D3D7",
    "InstallerAWSProxyproxyLambda9175808B",
    "InstallerAWSProxyProxyLambdaAssumeRoleDefaultPolicyB06906B1",
    "InstallerAWSProxyProxyLambdaAssumeRoleF3FE2653",
    "InstallerAWSProxyProxyLambdaSecurityGroupEF7BBAE0",
    "InstallerAWSProxyproxyTargetGroup5A38DE1A",
    "InstallerAWSProxyremovevpcaddvpcconfigtolambdaCustomResourcePolicy4FC937B1",
    "InstallerAWSProxyremovevpcaddvpcconfigtolambda3A2B3F1E",
    "InstallerAWSProxyRemoveIngressRuleOnALBCustomResourcePolicyF00BF610",
    "InstallerAWSProxyRemoveIngressRuleOnALB104E3D71",
    "InstallerBackendLambdaaddvpcconfigtolambdaCustomResourcePolicyF2C3FE72",
    "InstallerBackendLambdaaddvpcconfigtolambda430186F1",
    "InstallerBackendLambdaawsbackendclientendpointBF4B0F1B",
    "InstallerBackendLambdabackendLambdaAllowInvocationFromALBTargetGroupEA4B36DD",
    "InstallerBackendLambdabackendLambdaInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HY50E54A2E",
    "InstallerBackendLambdabackendLambda95AFC7DA",
    "InstallerBackendLambdabackendTargetGroup3801C211",
    "InstallerBackendLambdagetClusterSettingclusterclusterendpointslambdaarnCustomResourcePolicy3A8C689A",
    "InstallerBackendLambdagetClusterSettingclusterclusterendpointslambdaarn85CF7703",
    "InstallerBackendLambdagetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnCustomResourcePolicy3C051C06",
    "InstallerBackendLambdagetClusterSettingclusterloadbalancersexternalalbhttpslistenerarnEB058DEB",
    "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnetsCustomResourcePolicyFF8A6C6F",
    "InstallerBackendLambdagetClusterSettingclusternetworkprivatesubnets97689394",
    "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy852F9054",
    "InstallerBackendLambdagetClusterSettingclusternetworksecuritygroupsexternalloadbalancerF1D169E2",
    "InstallerBackendLambdagetClusterSettingclusternetworkvpcidCustomResourcePolicy7F3E4914",
    "InstallerBackendLambdagetClusterSettingclusternetworkvpcid782C38EB",
    "InstallerBackendLambdagetClusterSettingidentityprovidercognitodomainurlCustomResourcePolicyFB522F06",
    "InstallerBackendLambdagetClusterSettingidentityprovidercognitodomainurl0B8BD40B",
    "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurlCustomResourcePolicy17F849C4",
    "InstallerBackendLambdagetClusterSettingidentityprovidercognitoproviderurl05868028",
    "InstallerBackendLambdaLambdaExecutionRoleDefaultPolicyF8C9E64A",
    "InstallerBackendLambdaLambdaExecutionRole8F79B027",
    "InstallerBackendLambdaLambdaSecurityGroupbackendFC3143A1",
    "InstallerBackendLambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy12EF83F6",
    "InstallerBackendLambdaremovevpcaddvpcconfigtolambda98E09A3B",
    "InstallerBackendLambdaRemoveIngressRuleOnALBCustomResourcePolicyEF9D56F8",
    "InstallerBackendLambdaRemoveIngressRuleOnALB951E3374",
    "Installercognitopostauthsqsqueuedlq9483F398",
    "Installercognitopostauthsqsqueue2F2D9A3B",
    "InstallercognitosynclambdaaddvpcconfigtolambdaCustomResourcePolicy7E945652",
    "Installercognitosynclambdaaddvpcconfigtolambda06711ACD",
    "InstallercognitosynclambdacognitosyncruleAllowEventRuleResearchAndEngineeringStudioInstallercognitosynclambdacognitosync6A1637B38B38DD78",
    "Installercognitosynclambdacognitosyncrule75484F22",
    "InstallercognitosynclambdacognitosyncCD71593F",
    "InstallercognitosynclambdagetclustersettingclusteradministratorusernameCustomResourcePolicyD281F890",
    "Installercognitosynclambdagetclustersettingclusteradministratorusername77760F39",
    "InstallercognitosynclambdagetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy2BD625E4",
    "Installercognitosynclambdagetclustersettingclusternetworkprivatesubnets17357EA7",
    "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy27574C22",
    "InstallercognitosynclambdagetclustersettingclusternetworksecuritygroupsexternalloadbalancerD0B0BA56",
    "InstallercognitosynclambdagetclustersettingclusternetworkvpcidCustomResourcePolicy9CE1ED2F",
    "InstallercognitosynclambdagetclustersettingclusternetworkvpcidF959BEE2",
    "InstallercognitosynclambdagetclustersettingidentityprovidercognitosudoersgroupnameCustomResourcePolicy1EB0D991",
    "InstallercognitosynclambdagetclustersettingidentityprovidercognitosudoersgroupnameB5013270",
    "InstallercognitosynclambdagetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicy689F0040",
    "Installercognitosynclambdagetclustersettingidentityprovidercognitouserpoolid09DB8DC6",
    "InstallercognitosynclambdaLambdaExecutionRoleDefaultPolicy6747ABC8",
    "InstallercognitosynclambdaLambdaExecutionRole699EE732",
    "InstallercognitosynclambdaLambdaSecurityGroup86084F71",
    "InstallercognitosynclambdaremovevpcaddvpcconfigtolambdaCustomResourcePolicy11B9268F",
    "InstallercognitosynclambdaremovevpcaddvpcconfigtolambdaB6381975",
    "InstallercognitosynclambdaRemoveIngressRuleOnALBCustomResourcePolicyCBDCCA1C",
    "InstallercognitosynclambdaRemoveIngressRuleOnALB46312223",
    "InstallercognitotriggerworkflowaddvpcconfigtolambdaCustomResourcePolicy1FC65E2C",
    "InstallercognitotriggerworkflowaddvpcconfigtolambdaC8B36278",
    "Installercognitotriggerworkflowcognitopostauthinvokepostauthpermission42A06814",
    "Installercognitotriggerworkflowcognitopostauth5850DFD5",
    "Installercognitotriggerworkflowgenerateuid9E7424E3",
    "InstallercognitotriggerworkflowgenerateuidSqsEventSourceResearchAndEngineeringStudioInstallercognitopostauthsqsqueueD57FBED7CE55DBB6",
    "InstallercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsnameCustomResourcePolicy6B4E7965",
    "Installercognitotriggerworkflowgetclustersettingclusterloadbalancersexternalalbloadbalancerdnsname64DCD969",
    "InstallercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnetsCustomResourcePolicy8FBED546",
    "Installercognitotriggerworkflowgetclustersettingclusternetworkprivatesubnets2A0714AD",
    "InstallercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancerCustomResourcePolicy58FB1B52",
    "Installercognitotriggerworkflowgetclustersettingclusternetworksecuritygroupsexternalloadbalancer09B00C0A",
    "InstallercognitotriggerworkflowgetclustersettingclusternetworkvpcidCustomResourcePolicyCC7D1CE3",
    "Installercognitotriggerworkflowgetclustersettingclusternetworkvpcid966FB5C2",
    "InstallercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolidCustomResourcePolicyB8455672",
    "Installercognitotriggerworkflowgetclustersettingidentityprovidercognitouserpoolid0D518415",
    "InstallercognitotriggerworkflowLambdaSecurityGrouppostauth637813B9",
    "InstallercognitotriggerworkflowLambdaSecurityGroupuid5C887C1F",
    "InstallercognitotriggerworkflowpostauthlambdaroleDefaultPolicy9DD43A94",
    "Installercognitotriggerworkflowpostauthlambdarole605E8B49",
    "InstallercognitotriggerworkflowremovevpcaddvpcconfigtolambdaCustomResourcePolicy2193FDE8",
    "Installercognitotriggerworkflowremovevpcaddvpcconfigtolambda49114972",
    "InstallercognitotriggerworkflowremovevpcvpcconfiguidlambdaCustomResourcePolicy9471AE32",
    "InstallercognitotriggerworkflowremovevpcvpcconfiguidlambdaF8299180",
    "InstallercognitotriggerworkflowRemoveIngressRuleOnALBpostauthCustomResourcePolicyA8399A42",
    "InstallercognitotriggerworkflowRemoveIngressRuleOnALBpostauthFEEEBBFD",
    "InstallercognitotriggerworkflowRemoveIngressRuleOnALBuidCustomResourcePolicy595C72A3",
    "InstallercognitotriggerworkflowRemoveIngressRuleOnALBuid64BF001D",
    "InstallercognitotriggerworkflowuidlambdaroleDefaultPolicy25239190",
    "InstallercognitotriggerworkflowuidlambdaroleB379713F",
    "InstallercognitotriggerworkflowupdateuserpoolCustomResourcePolicy45A822EA",
    "Installercognitotriggerworkflowupdateuserpool68EDDA70",
    "InstallercognitotriggerworkflowvpcconfiguidlambdaCustomResourcePolicyA4D3E0EB",
    "InstallercognitotriggerworkflowvpcconfiguidlambdaECCF49E0",
    "InstallerCustomResourceEventHandlerA89E1A8A",
    "InstallerCustomResourceEventHandlerServiceRoleDefaultPolicy42CAD6CC",
    "InstallerCustomResourceEventHandlerServiceRole1092BCCA",
    "Installer0D856A54",
    "InstallerInstallerStateMachineEAA7045D",
    "InstallerInstallerStateMachineRoleDefaultPolicyC7A52C7D",
    "InstallerInstallerStateMachineRole6DA34EFE",
    "InstallerInstallerWaitCondition1733953381A3EC23A6",
    "InstallerInstallerWaitConditionHandle17339533816B7BD9B1",
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsE0526B2C",
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleDefaultPolicy82C698B7",
    "InstallerremoveleftoverlambdaandsgresourcescrtoremoveleftoversecuritygroupsServiceRoleCEA12CFC",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction0CustomResourcePolicy58B43A0F",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction082BAFCAB",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1CustomResourcePolicyA744D9E6",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction1136AD8CE",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction2CustomResourcePolicyAE885E7A",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction202216275",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3CustomResourcePolicyB44C5C30",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction3F23F16F7",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4CustomResourcePolicyF1B3B761",
    "Installerremoveleftoverlambdaandsgresourcesremovelambdafunction4963627E4",
    "InstallerremoveleftoverlambdaandsgresourcesremovesecuritygroupD9E9CA40",
    "InstallerTasksClusterA78B7F2B",
    "InstallerTasksCreateSecurityGroup514FFF0D",
    "InstallerTasksCreateTaskDefCreateContainerLogGroupB0BB7610",
    "InstallerTasksCreateTaskDef12809FCD",
    "InstallerTasksDeleteSecurityGroupD7708443",
    "InstallerTasksDeleteTaskDefDeleteContainerLogGroup20006B67",
    "InstallerTasksDeleteTaskDefDDA0ECF3",
    "InstallerTasksPermissionsPipelineRoleDefaultPolicy8E41116D",
    "InstallerTasksPermissionsPipelineRoleD0D276F9",
    "InstallerTasksUnprotectCognitoUserPoolLambda9823850B",
    "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRoleDefaultPolicy171E54D4",
    "InstallerTasksUnprotectCognitoUserPoolLambdaServiceRole41ADA9B7",
    "InstallerTasksUpdateSecurityGroup3269C5D9",
    "InstallerTasksUpdateTaskDef1EDBDB9C",
    "InstallerTasksUpdateTaskDefUpdateContainerLogGroupF3D746B9",
    "InstallerWaitConditionResponseSender7A7BC874",
    "InstallerWaitConditionResponseSenderServiceRoleD3B7C9E9"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/res-finalizer.NestedStack/res-finalizer.NestedStackResource",
    "aws:asset:path": "ResearchAndEngineeringStudioresfinalizer1DA0DA47.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2VTTW/bMAz9Lb0r2toehh3TrN0GZICXFNsxYGQmYSNLnkSlCAz/91Gy0yTtiXzk44dI6k7ffrnVn2/gNU5MvZ9YWutuyWD2arZxFQRokDEo8a86C826Bt3N4YjhD4ZI3mXaFX5KzvDoeNOX5LYW2btLb4WhoViCHg/oeOlTMPgL2lbYmfDR2qt4v4IYkaOeZiFYPySzR36AiIqg0d3CW8zhRVbekjmWckXrFZogHGx9JPahuM6oV8bXuE5ka91Vwb+g4RI8qDn6TndiWKJJgfj4PfjUqiskpNx4lCpp7ESktP5PTL8TpmIrilAtRCZjPdRrsOCMvPIgJaZtK+1CntUzhC3yUEgCL2BuR3LObIp5SeI8qU9CAsZniPtvuCFHp6G/t3jHQA7D2dYr67eSde63bzVPujyCsd2MS4wrlmxCfTRxkUpqNS838tMd/B7fsaXRnSeD0hxZJUfGslazk+q5xCXue1W2K7ZtvoUFxnIFaiav880Z5tWNuimuVRhxLOs7UC3DmL7G68B+LDhc+cXF/QViGUldBvEDXD3s78pcxnwCvaqOvPPu073+Kl/p5iUSTUJyTA3qxSD/Aya0JhlkAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "ResearchAndEngineeringStudio/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-gov-east-1": {
    "value": "nodejs18.x"
   },
   "us-gov-west-1": {
    "value": "nodejs18.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Conditions": {
  "PermissionBoundaryProvided": {
   "Fn::Not": [
    {
     "Fn::Equals": [
      {
       "Ref": "IAMPermissionBoundary"
      },
      ""
     ]
    }
   ]
  },
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 }
}